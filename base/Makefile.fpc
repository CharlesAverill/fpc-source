#
#   Makefile.fpc for Free Pascal Source Tree
#

[targets]
dirs=compiler rtl utils fcl api fv packages ide

[defaults]
defaultrule=info

[dirs]
fpcdir=$(BASEDIR)

[sections]
none=1
dirs=1
tools=1
exts=1
zipinstall=1

[postsettings]
export RELEASE=1


[rules]
#####################################################################
# Main targets
#####################################################################

.PHONY: compiler_cycle \
        idezips ide_allzip ide_gdbzip ide_fullzip ide_fullgdbzip \
        fclzip gtkzip fvzip compilerzip utilszip

info:
        @echo
        @echo Please use one of the following targets:
        @echo
        @echo $(DIROBJECTS)
        @echo
        @echo All targets can follow after a _ with:
        @echo all,clean,install,staticinstall,sharedinstall
        @echo
        @echo example: make api_staticinstall
        @exit

#####################################################################
# Dependencies
#####################################################################

#######################################
# Compiler
#######################################

compiler_cycle:
        $(MAKE) -C compiler cycle

#######################################
# IDE
#######################################

ide_gdb:
        $(MAKE) -C ide gdb

ide_full:
        $(MAKE) -C ide full

ide_fullgdb:
        $(MAKE) -C ide fullgdb


#######################################
# Install targets
#######################################

demo_install:
        $(MAKE) -C demo installexamples

man_install:
        $(MAKE) -C man installman

doc_install:
        $(MAKE) -C doc installdoc


#######################################
# Packaging targets
#######################################

ifndef DESTZIPDIR
export DESTZIPDIR:=$(BASEDIR)
endif

idezips: clean ide_allzip ide_gdbzip ide_fullzip ide_fullgdbzip

ide_allzip:
        $(MAKE) ide_clean
        $(MAKE) ide_all
        $(MAKE) -C ide/text zipinstall ZIPNAME=ide-fake-$(PACKAGESUFFIX)
ide_gdbzip:
        $(MAKE) ide_clean
        $(MAKE) ide_gdb
        $(MAKE) -C ide/text zipinstall ZIPNAME=ide-gdb-$(PACKAGESUFFIX)
ide_fullzip:
        $(MAKE) compiler_clean
        $(MAKE) ide_clean
        $(MAKE) ide_full
        $(MAKE) -C ide/text zipinstall ZIPNAME=ide-comp-$(PACKAGESUFFIX)
ide_fullgdbzip:
        $(MAKE) ide_clean
        $(MAKE) ide_fullgdb
        $(MAKE) -C ide/text zipinstall ZIPNAME=ide-full-$(PACKAGESUFFIX)

fvzip: rtl_clean
        $(MAKE) api_clean
        $(MAKE) fv_clean
        $(MAKE) fv_all
        $(MAKE) zipinstall ZIPTARGET='api_install fv_install' ZIPNAME=fv-$(PACKAGESUFFIX)

gtkzip: rtl_clean
        $(MAKE) -C packages gtk_clean
        $(MAKE) -C packages gtk_all
        $(MAKE) -C packages gtk_zipinstall ZIPNAME=gtk-$(PACKAGESUFFIX)

compilerzip:
# compiler_clean rtl_clean
        $(MAKE) rtl_all
        $(MAKE) compiler_all
        $(MAKE) zipinstall ZIPTARGET='compiler_install rtl_install' ZIPNAME=compiler-$(PACKAGESUFFIX)

fclzip: rtl_clean fcl_clean
        $(MAKE) fcl_all
        $(MAKE) fcl_zipinstall ZIPNAME=fcl-$(PACKAGESUFFIX)

utilszip: utils_clean rtl_clean fcl_clean
        $(MAKE) utils_all
        $(MAKE) utils_zipinstall ZIPNAME=utils-$(PACKAGESUFFIX)

