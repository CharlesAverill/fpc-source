{
  $Id$

  Translation of the Mesa GLU headers for FreePascal
  Copyright (C) 1999 Sebastian Guenther


  Mesa 3-D graphics library
  Version:  3.0
  Copyright (C) 1995-1998  Brian Paul

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Library General Public
  License as published by the Free Software Foundation; either
  version 2 of the License, or (at your option) any later version.
    
  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Library General Public License for more details.
    
  You should have received a copy of the GNU Library General Public
  License along with this library; if not, write to the Free
  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
}

{$MODE delphi}	// objfpc would not work because of direct proc var assignments

{You have to enable Macros (compiler switch "-Sm") for compiling this unit!
 This is necessary for supporting different platforms with different calling
 conventions via a single unit.}

unit GLU;

interface

{$IFDEF Win32}
  {$DEFINE glu_dll := }
  uses Windows, GL;
{$ELSE}
  {$MESSAGE Unsupported platform.}
{$ENDIF}


// =======================================================
//   Unit specific extensions
// =======================================================

function InitGLUFromLibrary(libname: PChar): Boolean;


// determines automatically which libraries to use:
function InitGLU: Boolean;


var
  GLUInitialized: Boolean;


// =======================================================
//   GLU consts, types and functions
// =======================================================

%GLUDeclsIF

var
%GLUProcsPD


// =======================================================
//
// =======================================================

implementation

type
  HInstance = LongWord;

var
  libGLU : HInstance;

function GetProc(handle: HInstance; name: PChar): Pointer;
begin
  Result := GetProcAddress(handle, name);
  if Result = nil then WriteLn('Unresolved: ', name);
end;

function InitGLUFromLibrary(libname: PChar): Boolean;
begin
  Result := False;
  libGLU := LoadLibrary(libname);
  if libGLU = 0 then exit;

%GLUProcsPL

  GLUInitialized := True;
  Result := True;
end;


function InitGLU: Boolean;
begin
  Result := InitGLUFromLibrary('glu32.dll');
end;


finalization
  if libGLU <> 0 then FreeLibrary(libGLU);
end.


{
  $Log$
  Revision 1.1  2000-05-31 00:35:14  alex
  added working templates

}
