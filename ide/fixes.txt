Gabor's log to 27/11/2000 commits
========================= Already fixed ================================

 [*] no files were shown in the Block Read and Block Write dialogs (the file
     mask used was empty)

========================= Improvements ================================

 [+] support for positioning cursor in codetemplates added (you've to place
     a filter ("|") char where you want the cursor positioned after insertion
     of the code template)
 [+] result of calculation can now be pasted into editors by pressing
     Ctrl+Enter in the calculator
 [+] when the codetemplate shortcut isn't recognized, then the CodeTemplates
     dialog is shown, enabling the user to select the desired template
 [+] the block indent size can now be set in the Editor Options dialog

Gabor's log to 18/10/2000 commits
========================= Improvements ================================

 [+] HTML keyword index file stores now relative paths, thus it can be
     moved/copied freely as long as relative paths are preserved
 [+] history lists added at several points (like run parameters, ini
     file name, compiler conditionals, etc.)

Gabor's log to 18/09/2000 commits
========================= Already fixed ================================

 [*] editor flags weren't stored in desktop file
 [*] TFastBufStream contained a bug which showed up when using non-linear
     (eg. "random") reads, and resulted in returning data from wrong file
     position

========================= Improvements ================================

 [+] added support for OS/2 help files (.INF) to the help system
 [+] started implementing fold support (it's not yet fully functional!!!)

     Folds enable you to hide specific parts of the documents (independantly
     of each other). When a fold is hidden only it's first line (the fold
     header) is show - all other lines (the fold body) and all subfolds do
     not appear on screen. Folds can be also nested.
     This is very useful for ex. to hide the implementation part of a
     procedure, while leaving the procedure header still visible. This greatly
     simplyfies navigation in the source file by temporarily hiding currently
     unused content.
     Fold information could be (optionally) gerenated automatically by the
     compiler, according to the control/syntax-tree of the program.

     Folds can be created manually by selecting an area and the pressing
     Ctrl-K-A. Valids are fold areas that do not cross bounds of already
     existing folds.
     Fold bodies can be hidden with Ctrl-Gray-, shown with Ctrl-Gray+.
     Pressing Ctrl-Gray* toggles the visibility of a fold body.

Gabor's log to 10/8/2000 commits
========================= Already fixed ================================

 [*] 'Auto save editor files' option did the opposite than expected, due
     to a typo in FPIDE.PAS

========================= Improvements ================================

 [+] saving of source files before compilation is no longer neccessary.
     When a modified editor file is involved in the compilation, then the
     IDE saves it's contents to a memory stream and passes this to the
     compiler (instead of the file on the disk)
Gabor's log to 19/7/2000 commits
========================= Improvements ================================

 [+] the .ini parser now handles string delimiters more flexible
     (you can now include quotation-marks in an entry value if you use no
      delimiters at all, or if you use aphostrophes as delimiters)
 [+] new .TDF view type added: MEMO.
     Memos can have an additional property, "FileName". After closing the
     toolparams dialog box the contents of the memo are saved in a file,
     and the reference to the memo field in the tool command-line is
     replaced with the name of this file. (If no filename is specified the
     file is stored under a unique name in the temp dir.)

Gabor's log to 18/7/2000 commits
========================= Already fixed ================================

 [*] pressing Enter on the last line (eg. appending a line) in the editor
     didn't scroll the editor window
 [*] the IDE switches now correctly back to the last video mode at startup


Gabors's log to 26/6/2000 commits
========================= Already fixed ================================

 [*] topics with the same name are now all shown on the Index page

========================== Other improvements ============================

 [+] added support for "see also" entries of Norton Guide help topics
 [+] coloring of NG help is now integrated with the common color managment
     system of FV
 [+] started implementing help support for Windows Help files

Gabors's log to 22/6/2000 commits
========================== Other improvements ============================

 [+] added support for reading .NG (Norton Guide) in the help system

========================== Misc modifications ============================

 [?] the VESA unit now uses the routines of PMODE, instead of it's owns
 [?] constants (255) changed to High()s in checks for maximum string lengths

Gabors's log to 16/6/2000 commits
========================= Already fixed ================================

 [*] temporary files are now delete on exit
 [*] Size/Move (Ctrl+F5) didn't work correctly with some windows, which
     defined a different meaning for Enter (for ex. message windows)
 [*] 'Open file at cursor' brings up an open dialog with a correct name
     in it now, when it can't find the file itself
 [*] TFileDialog treated filename-list (multiple names separated with
     semicolons) as single filenames, whereas they're more like wildchar
     masks
 [*] TFileDialog treated paths ending with a dirsep (\) as filespecs,
     however, they're actually dirspecs

========================== Other improvements ============================

 [+] editor windows can now be hidden temporarily
 [+] unit info tab added to symbol browser
 [+] strings constants from generic units moved to WCONSTS.PAS
 [+] small info screen at first start
Gabors's log to 29/5/2000 commits
========================= Already fixed ================================

 [*] TOAHelpFile.Init contained a bug, which caused an invalid pointer
     operation when the help file version was incorrect (it resulted in
     fatal exit)
 [*] the cursor position in TSymbolScopeView was independant of the current
     horizontal scroll offset
 [*] the value of string constant wasn't displayed correctly in the symbol
     browser (they were typecasted to PStrings, however they are PChars now)
 [*] partial syntax highlight messed up CodeComplete
 [*] the HTML link scanner wasn't aware of bookmark links

========================== Other improvements ============================

 [+] added support for TP5.5 format help files
 [+] added support for HTML bookmarks in the help system
 [+] fix calls into browcol turned into hooks (for future use in CodeInsight)
Gabor's log 1/5/2000 commits
========================= Already fixed ================================

 [*] a just freshly created editor window (without any chars entered) simply
     "ate" all Save commands

========================== Other improvements ============================

 [+] source paths are now "adjusted" to show only important path elements
     when they don't fit in the title area of the source window
 [+] template macros implemented (you can use them in the .PT files)
     $TIME - actual time
     $DATE - actual date
     $DATE('yyyy/mm/dd hh.nn.ss') - actual date formatted using specified str
     $PROMPT('paramname') - variable parameter entered by user
 [+] the size of some windows is now dependant on the current resolution
 [+] all IDE strings contants converted to resourcestrings
 [+] /hm command-line switch for enabling/disabling heap monitor

=========================== Todo ========================================

 [!] convert all API,FV,etc. message strings to resourcestrings
 [!] add "Find in files" command, probably using internal grep routine
 [!] implement Projects & project managment
     - specifying project files
     - todo list mangment
     - generating project list file
Gabor's log 25/4/2000 commits

========================= Fixes to apply ==============================

The GO32 mouse.inc (API) displays a message ("No mouse driver found!") when
it doesn't find a mouse driver. This message should be removed.

========================= Already fixed ================================

 [*] when saving a file with different name (or saving a new file) the
     default extension of '.pas' wasn't applied to the name specified
 [*] THelpViewer didn't care about LockFlag, and thus flickered on complex
     updates
 [*] sever sheets of the symbol browser were selectable thru keyboard, even
     when they were disabled/non-visible
 [*] Ctrl--> and Ctrl-<- skipped over '[' and ']'
 [*] unsaved new windows (nonamexx.pas) aren't stored to desktop file any more
     (on the next startup the IDE tried to open the file with no name)
 [*] clock view didn't stay in the upper left corner when the desktop has been
     resized (for ex. at video-mode change)
 [*] the IDE didn't switch correctly between video modes
     (especially 80x50 caused trouble)
 [*] buttons in Breakpoints window didn't move when resizing the window
 [*] tracking source didn't work correctly (for ex. in symbol browser,msgs,..)
 [*] symbol browser didn't respond to Ctrl+Enter (goto source)
 [*] symbol browser views' behaviour unified
 [*] BuildObjectTree failed to build the object tree correctly when there were
     multiple objects defined with the same name. for ex. in object pascal mode
     there are 2 objects called TObject (the built-in base object for classes
     and the one in objects.pp) and thus the entire object tree of TObject
     object was "lost"
 [*] in the linking state the text 'Please wait...' is displayed now, instead
     of 'Press Esc to cancel' (which won't work and is incorrect)
 [+] Inheritance symbol viewer scrolls now, and acts on [Ctrl+]Left,Right keys

========================== Other improvements ============================

 [+] at startup the IDE checks whether there's a file called FP.ANS in any
     of the search directories, and if it founds one, then loads it as the
     background for the desktop (the file is interpreted as an ANSI file)
     (Peter, you can finally put your favorite FPC-logo on your desktop now ;)
 [+] 'Auto track source' option implemented (-> symbol browser)
 [+] 'Compiler messages' window is only shown when there's something to
     display (ie. if there's no error/message, then it won't be shown)

=========================== Todo ========================================

Gabor's log for 18/4/2000 commits

========================= Already fixed ================================

 [*] THTMLTopicRenderer didn't handle table tags (<TABLE>,<TR>,<TH>,<TD>)
 [*] the IDE didn't prompt the user for saving modified files at exit, when
     there were multiple editor windows open for the same file
 [*] the IDE didn't respond to some hotkeys (for ex. Alt+F3) after a success-
     ful compilation

========================== Other improvements ============================

 [+] HTML index generation added. This enables users to index any collection
     of HTML files, for ex. the HTML version of the FPC docs.
     This way we can finally get a WinAPI help for the IDE. The user simply
     has to download a .chm version of the WinAPI help, decompile it with the
     M$ HTML Help Workshop, and install it as a help file...
     (however this will only work in a DOS box under W9X, or with the win32
     version of IDE, as these HTML files use long filenames)
 [+] TCodeEditor acts now on several additional keys, like
     Ctrl+O+A - Open at cursor      , Ctrl+O+B - Browse at cursor      ,
     Ctrl+O+G - Go to line number   , Ctrl+O+O - Insert options        ,
     Ctrl+O+U - Toggle case of char , Ctrl+O+L - Select line           ,
     Ctrl+K+S - Save file           , Ctrl+K+D - Activate menubar      ,
     Ctrl+K+N - Block to uppercase  , Ctrl+K+O - Block to lowercase    ,
     Ctrl+K+E - Word to lowercase   , Ctrl+K+F - Word to uppercase     ,
     Ctrl+Q+E - Jump to top of wnd  , Ctrl+Q+T - Jump to top of wnd    ,
     Ctrl+Q+U - Jump to bottom of wnd,Ctrl+Q+X - Jump to bottom of wnd ,
     Ctrl+Q+[ - find delimiter-match, Ctrl+Q+] - find delimited match (backw)

=========================== Todo ========================================
