#
# Makefile generated by fpcmake v0.99.13 on 1999-12-21 16:56
#

defaultrule: all

#####################################################################
# Autodetect OS (Linux or D





# Pre Settings

# when making a full version include the compiler
ifeq ($(FULL),1)
override COMPUNITDIR+=../../compiler
else
override COMPUNITDIR+=../fake/compiler
endif

# when including debugger include the gdbinterface
ifndef GDBINT
GDBINT=gdbint
endif

ifeq ($(GDB),1)
GDBUNITDIR+=$(PACKAGEDIR)/$(GDBINT)
GDBLIBDIR+=$(PACKAGEDIR)/$(GDBINT)/libgdb/$(OS_TARGET)
GDBOBJDIR+=$(PACKAGEDIR)/$(GDBINT)/libgdb/$(OS_TARGET)
ifeq ($(OS_TARGET),go32v2)
ifneq ($(DJDIR),)
GDBLIBDIR+=$(DJDIR)/lib
endif
endif
else
override GDBUNITDIR+=../fake/gdb
endif

# Targets

override EXEOBJECTS+=fp

# Clean


# Install

ZIPTARGET=install

# Defaults

override NEEDOPT=-Sg

# Directories

ifndef FPCDIR
FPCDIR=../..
endif
ifndef PACKAGEDIR
PACKAGEDIR=$(FPCDIR)/packages
endif
ifndef COMPONENTDIR
COMPONENTDIR=$(FPCDIR)/components
endif
override NEEDUNITDIR=$(COMPUNITDIR) $(GDBUNITDIR)
override NEEDLIBDIR=$(GDBLIBDIR)
override NEEDOBJDIR=$(GDBOBJDIR)

# Packages

override PACKAGES+=api fv gdbint
override NEEDUNITDIR+=$(addprefix $(PACKAGEDIR)/,$(PACKAGES))

# Libraries

override NEEDGCCLIB=1

# Info

INFOTARGET=fpc_infocfg fpc_infoobjects fpc_infoinstall 

# Post Settings

ifeq ($(FULL),1)
override NEEDOPT+=-dBrowserCol -dGDB -Sg
endif
























all: fpc_all

debug: fpc_debug

smart: fpc_smart

shared: fpc_shared

showinstall: fpc_showinstall

sourceinstall: fpc_sourceinstall

zipinstall: fpc_zipinstall

zipinstalladd: fpc_zipinstalladd

cleanall: fpc_cleanall

info: fpc_info

.PHONY:  all debug smart shared showinstall sourceinstall zipinstall zipinstalladd cleanall info


ifneq ($(wildcard $(RTLDIR)),)
ifeq ($(wildcard $(RTLDIR)/$(FPCMADE)),)
override COMPILEPACKAGES+=rtl
rtl_package:
	$(MAKE) -C $(RTLDIR) all
endif
endif

PACKAGEAPI=1
PACKAGEFV=1
PACKAGEGDBINT=1
ifdef PACKAGEAPI
ifneq ($(wildcard $(PACKAGEDIR)/api),)
ifeq ($(wildcard $(PACKAGEDIR)/api/$(FPCMADE)),)
override COMPILEPACKAGES+=api
api_package:
	$(MAKE) -C $(PACKAGEDIR)/api all
endif
endif
endif
ifdef PACKAGEFV
ifneq ($(wildcard $(PACKAGEDIR)/fv),)
ifeq ($(wildcard $(PACKAGEDIR)/fv/$(FPCMADE)),)
override COMPILEPACKAGES+=fv
fv_package:
	$(MAKE) -C $(PACKAGEDIR)/fv all
endif
endif
endif
ifdef PACKAGEGDBINT
ifneq ($(wildcard $(PACKAGEDIR)/gdbint),)
ifeq ($(wildcard $(PACKAGEDIR)/gdbint/$(FPCMADE)),)
override COMPILEPACKAGES+=gdbint
gdbint_package:
	$(MAKE) -C $(PACKAGEDIR)/gdbint all
endif
endif
endif

.PHONY:  rtl_package api_package fv_package gdbint_package













.PHONY: gdb full fullgdb clean_compiler

fp$(EXEEXT): $(wildcard *.pas) $(wildcard *.inc)

gdb:
	$(MAKE) all GDB=1

full:
	$(MAKE) all FULL=1

fullgdb:
	$(MAKE) all FULL=1 GDB=1

# This is necessary because we don't have all units separate in the
# units targets
clean: fpc_cleanall

#
# Installation
#
install: fpc_install
	$(INSTALL) $(wildcard *.pt) $(wildcard *.tdf) readme.txt $(BININSTALLDIR)

#
# Misc
#
clean_compiler:
	$(MAKE) -C ../../compiler clean
