#
#   Makefile.fpc for FP IDE
#

[targets]
programs=fp
rst=fpstrings

[install]
datadir=$(BASEINSTALLDIR)/ide

[dirs]
fpcdir=../..
targetdir=.

[require]
options=-Sg
packages=api fv gdbint

[libs]
libgcc=1


[postsettings]
# when making a full version include the compiler
ifeq ($(FULL),1)
override UNITDIR+=../../compiler ../../compiler/$(CPU_TARGET)
override INCDIR+=../../compiler ../../compiler/$(CPU_TARGET)
else
override UNITDIR+=../fake/compiler
endif

# when including debugger include the gdbinterface
ifndef GDBINT
GDBINT=gdbint
endif

ifeq ($(GDB),1)
override GDBLIBDIR+=$(PACKAGESDIR)/$(GDBINT)/libgdb/$(OS_TARGET)
override GDBOBJDIR+=$(PACKAGESDIR)/$(GDBINT)/libgdb/$(OS_TARGET)
ifeq ($(OS_TARGET),go32v2)
ifneq ($(DJDIR),)
override GDBLIBDIR+=$(DJDIR)/lib
endif
endif
ifeq ($(strip $(wildcard $(addsuffix /libgdb.a,$(GDBLIBDIR)))),)
override GDB=0
GDBFOUND=0
else
override LIBGDB=$(firstword $(wildcard $(addsuffix /libgdb.a,$(GDBLIBDIR))))
GDBFOUND=1
endif
endif

ifeq ($(GDB),1)
# The gdbint is already included due the gdbint package dependency
override LIBDIR+=$(GDBLIBDIR)
override OBJDIR+=$(GDBOBJDIR)
else
override UNITDIR+=../fake/gdb
endif

ifeq ($(FULL),1)
override OPT+=-dBrowserCol -dGDB
ifeq ($(CPU_TARGET),i386)
override OPT+=-dSUPPORT_MMX
endif
endif


[rules]
.PHONY: gdb full fullgdb clean_compiler clean testgdb postgdbinfo

clean: fpc_cleanall

distclean: clean

fp$(EXEEXT): $(wildcard *.pas) $(wildcard *.inc)

testgdb:
ifneq ($(GDBFOUND),0)
        $(ECHO) LibGDB found in $(LIBGDB)
else
        $(ECHO) LibGDB not found
        $(ECHO) LIBGDB=$(LIBGDB)
        $(ECHO) GDBLIBDIR=$(GDBLIBDIR)
        $(ECHO) $(wildcard $(addsuffix /libgdb.a,$(GDBLIBDIR)))
endif

postgdbinfo:
ifeq ($(GDBFOUND),0)
        $(ECHO) LibGDB was not found, IDE has no Debugger support
else
        $(ECHO) LibGDB found in $(LIBGDB)
endif

gdb:
        $(MAKE) testgdb all GDB=1 postgdbinfo

full:
        $(MAKE) all FULL=1

fullgdb:
        $(MAKE) testgdb all FULL=1 GDB=1 postgdbinfo

# This is necessary because we don't have all units separate in the
# units targets
clean: fpc_cleanall

#
# Installation
#

ifndef UNIXINSTALLDIR
override DATAINSTALLDIR=$(BININSTALLDIR)
endif

install: fpc_install
        $(MKDIR) $(DATAINSTALLDIR)
        $(MKDIR) $(DOCINSTALLDIR)
        $(INSTALL) fp.ans $(wildcard *.pt) $(wildcard *.tdf) $(DATAINSTALLDIR)
        $(INSTALL) readme.ide $(DOCINSTALLDIR)


#
# Misc
#
clean_compiler:
        $(MAKE) -C ../../compiler clean
