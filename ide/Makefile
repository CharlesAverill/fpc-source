#
# Makefile generated by fpcmake v0.99.13 on 1999-12-21 16:56
#

defaultrule: all

#####################################################################
# Autodetect OS (Linux or D





# Targets

override DIROBJECTS+=$(wildcard fake text)

# Clean


# Install

ZIPTARGET=install

# Defaults


# Directories

ifndef PACKAGEDIR
PACKAGEDIR=$(FPCDIR)/packages
endif
ifndef COMPONENTDIR
COMPONENTDIR=$(FPCDIR)/components
endif

# Packages


# Libraries



debug: $(addsuffix _debug,$(DIROBJECTS))

examples: $(addsuffix _examples,$(DIROBJECTS))

test: $(addsuffix _test,$(DIROBJECTS))

smart: $(addsuffix _smart,$(DIROBJECTS))

shared: $(addsuffix _shared,$(DIROBJECTS))

showinstall: $(addsuffix _showinstall,$(DIROBJECTS))

install: $(addsuffix _install,$(DIROBJECTS))

sourceinstall: $(addsuffix _sourceinstall,$(DIROBJECTS))

clean: $(addsuffix _clean,$(DIROBJECTS))

cleanall: $(addsuffix _cleanall,$(DIROBJECTS))

depend: $(addsuffix _depend,$(DIROBJECTS))

.PHONY:  debug examples test smart shared showinstall install sourceinstall clean cleanall depend


ifneq ($(wildcard $(RTLDIR)),)
ifeq ($(wildcard $(RTLDIR)/$(FPCMADE)),)
override COMPILEPACKAGES+=rtl
rtl_package:
	$(MAKE) -C $(RTLDIR) all
endif
endif

.PHONY:  rtl_package


# Target Dirs

OBJECTDIRFAKE=1
OBJECTDIRTEXT=1

# Dir fake

ifdef OBJECTDIRFAKE
.PHONY:  fake_all fake_debug fake_examples fake_test fake_smart fake_shared fake_showinstall fake_install fake_sourceinstall fake_zipinstall fake_zipinstalladd fake_clean fake_cleanall fake_depend fake_info

fake_all:
	$(MAKE) -C fake all

fake_debug:
	$(MAKE) -C fake debug

fake_examples:
	$(MAKE) -C fake examples

fake_test:
	$(MAKE) -C fake test

fake_smart:
	$(MAKE) -C fake smart

fake_shared:
	$(MAKE) -C fake shared

fake_showinstall:
	$(MAKE) -C fake showinstall

fake_install:
	$(MAKE) -C fake install

fake_sourceinstall:
	$(MAKE) -C fake sourceinstall

fake_zipinstall:
	$(MAKE) -C fake zipinstall

fake_zipinstalladd:
	$(MAKE) -C fake zipinstalladd

fake_clean:
	$(MAKE) -C fake clean

fake_cleanall:
	$(MAKE) -C fake cleanall

fake_depend:
	$(MAKE) -C fake depend

fake_info:
	$(MAKE) -C fake info
endif

# Dir text

ifdef OBJECTDIRTEXT
.PHONY:  text_all text_debug text_examples text_test text_smart text_shared text_showinstall text_install text_sourceinstall text_zipinstall text_zipinstalladd text_clean text_cleanall text_depend text_info

text_all:
	$(MAKE) -C text all

text_debug:
	$(MAKE) -C text debug

text_examples:
	$(MAKE) -C text examples

text_test:
	$(MAKE) -C text test

text_smart:
	$(MAKE) -C text smart

text_shared:
	$(MAKE) -C text shared

text_showinstall:
	$(MAKE) -C text showinstall

text_install:
	$(MAKE) -C text install

text_sourceinstall:
	$(MAKE) -C text sourceinstall

text_zipinstall:
	$(MAKE) -C text zipinstall

text_zipinstalladd:
	$(MAKE) -C text zipinstalladd

text_clean:
	$(MAKE) -C text clean

text_cleanall:
	$(MAKE) -C text cleanall

text_depend:
	$(MAKE) -C text depend

text_info:
	$(MAKE) -C text info
endif


.PHONY: gdb full fullgdb clean_compiler

all:
	$(MAKE) -C text all

gdb:
	$(MAKE) -C text all GDB=1

full:
	$(MAKE) -C text all FULL=1 "NEEDOPT+=-Sg -dGDB -dBROWSERCOL"

fullgdb:
	$(MAKE) -C text all FULL=1 GDB=1 "NEEDOPT+=-Sg -dGDB -dBROWSERCOL"

#
# Misc
#
clean_compiler:
	make -C ../../compiler clean
