#
# Makefile generated by fpcmake v0.99.13 on 1999-12-21 16:56
#

defaultrule: all

#####################################################################
# Autodetect OS (Linux or D





# Targets

override DIROBJECTS+=$(wildcard go32v2 linux win32 os2 tests)

# Clean


# Install

ZIPTARGET=install

# Defaults


# Directories

ifndef PACKAGEDIR
PACKAGEDIR=$(FPCDIR)/packages
endif
ifndef COMPONENTDIR
COMPONENTDIR=$(FPCDIR)/components
endif

# Packages


# Libraries



all: $(OS_TARGET)_all

debug: $(OS_TARGET)_debug

examples: $(OS_TARGET)_examples

test: $(OS_TARGET)_test

smart: $(OS_TARGET)_smart

shared: $(OS_TARGET)_shared

showinstall: $(OS_TARGET)_showinstall

install: $(OS_TARGET)_install

sourceinstall: $(OS_TARGET)_sourceinstall

zipinstall: $(OS_TARGET)_zipinstall

zipinstalladd: $(OS_TARGET)_zipinstalladd

clean: $(OS_TARGET)_clean

cleanall: $(OS_TARGET)_cleanall

depend: $(OS_TARGET)_depend

info: $(OS_TARGET)_info

.PHONY:  all debug examples test smart shared showinstall install sourceinstall zipinstall zipinstalladd clean cleanall depend info


ifneq ($(wildcard $(RTLDIR)),)
ifeq ($(wildcard $(RTLDIR)/$(FPCMADE)),)
override COMPILEPACKAGES+=rtl
rtl_package:
	$(MAKE) -C $(RTLDIR) all
endif
endif

.PHONY:  rtl_package


# Target Dirs

OBJECTDIRGO32V2=1
OBJECTDIRLINUX=1
OBJECTDIRWIN32=1
OBJECTDIROS2=1
OBJECTDIRTESTS=1

# Dir go32v2

ifdef OBJECTDIRGO32V2
.PHONY:  go32v2_all go32v2_debug go32v2_examples go32v2_test go32v2_smart go32v2_shared go32v2_showinstall go32v2_install go32v2_sourceinstall go32v2_zipinstall go32v2_zipinstalladd go32v2_clean go32v2_cleanall go32v2_depend go32v2_info

go32v2_all:
	$(MAKE) -C go32v2 all

go32v2_debug:
	$(MAKE) -C go32v2 debug

go32v2_examples:
	$(MAKE) -C go32v2 examples

go32v2_test:
	$(MAKE) -C go32v2 test

go32v2_smart:
	$(MAKE) -C go32v2 smart

go32v2_shared:
	$(MAKE) -C go32v2 shared

go32v2_showinstall:
	$(MAKE) -C go32v2 showinstall

go32v2_install:
	$(MAKE) -C go32v2 install

go32v2_sourceinstall:
	$(MAKE) -C go32v2 sourceinstall

go32v2_zipinstall:
	$(MAKE) -C go32v2 zipinstall

go32v2_zipinstalladd:
	$(MAKE) -C go32v2 zipinstalladd

go32v2_clean:
	$(MAKE) -C go32v2 clean

go32v2_cleanall:
	$(MAKE) -C go32v2 cleanall

go32v2_depend:
	$(MAKE) -C go32v2 depend

go32v2_info:
	$(MAKE) -C go32v2 info
endif

# Dir linux

ifdef OBJECTDIRLINUX
.PHONY:  linux_all linux_debug linux_examples linux_test linux_smart linux_shared linux_showinstall linux_install linux_sourceinstall linux_zipinstall linux_zipinstalladd linux_clean linux_cleanall linux_depend linux_info

linux_all:
	$(MAKE) -C linux all

linux_debug:
	$(MAKE) -C linux debug

linux_examples:
	$(MAKE) -C linux examples

linux_test:
	$(MAKE) -C linux test

linux_smart:
	$(MAKE) -C linux smart

linux_shared:
	$(MAKE) -C linux shared

linux_showinstall:
	$(MAKE) -C linux showinstall

linux_install:
	$(MAKE) -C linux install

linux_sourceinstall:
	$(MAKE) -C linux sourceinstall

linux_zipinstall:
	$(MAKE) -C linux zipinstall

linux_zipinstalladd:
	$(MAKE) -C linux zipinstalladd

linux_clean:
	$(MAKE) -C linux clean

linux_cleanall:
	$(MAKE) -C linux cleanall

linux_depend:
	$(MAKE) -C linux depend

linux_info:
	$(MAKE) -C linux info
endif

# Dir win32

ifdef OBJECTDIRWIN32
.PHONY:  win32_all win32_debug win32_examples win32_test win32_smart win32_shared win32_showinstall win32_install win32_sourceinstall win32_zipinstall win32_zipinstalladd win32_clean win32_cleanall win32_depend win32_info

win32_all:
	$(MAKE) -C win32 all

win32_debug:
	$(MAKE) -C win32 debug

win32_examples:
	$(MAKE) -C win32 examples

win32_test:
	$(MAKE) -C win32 test

win32_smart:
	$(MAKE) -C win32 smart

win32_shared:
	$(MAKE) -C win32 shared

win32_showinstall:
	$(MAKE) -C win32 showinstall

win32_install:
	$(MAKE) -C win32 install

win32_sourceinstall:
	$(MAKE) -C win32 sourceinstall

win32_zipinstall:
	$(MAKE) -C win32 zipinstall

win32_zipinstalladd:
	$(MAKE) -C win32 zipinstalladd

win32_clean:
	$(MAKE) -C win32 clean

win32_cleanall:
	$(MAKE) -C win32 cleanall

win32_depend:
	$(MAKE) -C win32 depend

win32_info:
	$(MAKE) -C win32 info
endif

# Dir os2

ifdef OBJECTDIROS2
.PHONY:  os2_all os2_debug os2_examples os2_test os2_smart os2_shared os2_showinstall os2_install os2_sourceinstall os2_zipinstall os2_zipinstalladd os2_clean os2_cleanall os2_depend os2_info

os2_all:
	$(MAKE) -C os2 all

os2_debug:
	$(MAKE) -C os2 debug

os2_examples:
	$(MAKE) -C os2 examples

os2_test:
	$(MAKE) -C os2 test

os2_smart:
	$(MAKE) -C os2 smart

os2_shared:
	$(MAKE) -C os2 shared

os2_showinstall:
	$(MAKE) -C os2 showinstall

os2_install:
	$(MAKE) -C os2 install

os2_sourceinstall:
	$(MAKE) -C os2 sourceinstall

os2_zipinstall:
	$(MAKE) -C os2 zipinstall

os2_zipinstalladd:
	$(MAKE) -C os2 zipinstalladd

os2_clean:
	$(MAKE) -C os2 clean

os2_cleanall:
	$(MAKE) -C os2 cleanall

os2_depend:
	$(MAKE) -C os2 depend

os2_info:
	$(MAKE) -C os2 info
endif

# Dir tests

ifdef OBJECTDIRTESTS
.PHONY:  tests_all tests_debug tests_examples tests_test tests_smart tests_shared tests_showinstall tests_install tests_sourceinstall tests_zipinstall tests_zipinstalladd tests_clean tests_cleanall tests_depend tests_info

tests_all:
	$(MAKE) -C tests all

tests_debug:
	$(MAKE) -C tests debug

tests_examples:
	$(MAKE) -C tests examples

tests_test:
	$(MAKE) -C tests test

tests_smart:
	$(MAKE) -C tests smart

tests_shared:
	$(MAKE) -C tests shared

tests_showinstall:
	$(MAKE) -C tests showinstall

tests_install:
	$(MAKE) -C tests install

tests_sourceinstall:
	$(MAKE) -C tests sourceinstall

tests_zipinstall:
	$(MAKE) -C tests zipinstall

tests_zipinstalladd:
	$(MAKE) -C tests zipinstalladd

tests_clean:
	$(MAKE) -C tests clean

tests_cleanall:
	$(MAKE) -C tests cleanall

tests_depend:
	$(MAKE) -C tests depend

tests_info:
	$(MAKE) -C tests info
endif

