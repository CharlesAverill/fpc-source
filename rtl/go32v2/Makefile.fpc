#
#   Makefile.fpc for Go32v2 RTL
#
[package]
main=rtl
[target]
loaders=prt0 exceptn fpu
units=system $(UUCHARUNIT) $(OBJPASUNIT) $(MACPASUNIT) $(ISO7185UNIT) $(EXTPASUNIT) $(STRINGSUNIT) \
      go32 dpmiexcp $(INITCUNIT) $(PORTSUNIT) profile dxetype dxeload emu387 \
      $(DOSUNIT) $(CMEMUNIT) $(SORTBASEUNIT) \
      $(SYSUTILSUNIT) $(CLASSESUNIT) $(MATHUNIT) $(TYPINFOUNIT) \
      $(CPUUNIT) $(MMXUNIT) $(GETOPTSUNIT) $(HEAPTRCUNIT) $(LINEINFOUNIT) $(LNFODWRFUNIT) $(CTYPESUNIT) $(FGLUNIT) \
      $(MSMOUSEUNIT) $(CHARSETUNIT) $(CPALLUNIT) \
      $(CHARACTERUNIT) $(FPWIDESTRINGUNIT) $(UNICODEDATAUNIT) \
      $(TYPESUNIT) $(SYSCONSTUNIT) $(RTLCONSTSUNIT) \
      $(SOFTFPUUNIT) $(SFPUX80UNIT) $(UFLOATX80UNIT) $(SFPU128UNIT) $(UFLOAT128UNIT)
rsts=$(MATHUNIT) $(TYPINFOUNIT) $(CLASSESUNIT) $(SYSCONSTUNIT)
implicitunits=$(EXEINFOUNIT) $(CP_UNITS)
[require]
nortl=y
[install]
fpcpackage=y
[default]
target=go32v2
cpu=i386
[compiler]
includedir=$(INC) $(PROCINC)
sourcedir=$(INC) $(PROCINC) $(COMMON)
[prerules]
RTL=..
INC=../inc
COMMON=$(RTL)/common
PROCINC=../$(CPU_TARGET)
UNITPREFIX=rtl
SYSTEMUNIT=system
ifndef FPC_DOTTEDUNITS
RTLCONSTSUNIT=rtlconst
endif

INITC_DEPS_OS=$(DPMIEXCPUNIT)$(PPUEXT)
SYSUTILS_DEPS_OS = $(DOSUNIT)$(PPUEXT) go32$(PPUEXT)

# Use new feature from 1.0.5 version
# that generates release PPU files
# which will not be recompiled
ifdef RELEASE
override FPCOPT+=-Ur
endif
# Paths
OBJPASDIR=$(RTL)/objpas
# Insert exception handler in system unit
ifdef EXCEPTIONS_IN_SYSTEM
override FPCOPT+=-dEXCEPTIONS_IN_SYSTEM
endif
# Insert exception handler in system unit
ifdef NO_EXCEPTIONS_IN_SYSTEM
override FPCOPT+=-dNO_EXCEPTIONS_IN_SYSTEM
endif
[rules]
.NOTPARALLEL:
# Get the system independent include file names.
# This will set the following variables :
# SYSINCNAMES
include $(INC)/makefile.inc
SYSINCDEPS=$(addprefix $(INC)/,$(SYSINCNAMES))
# Get the processor dependent include file names.
# This will set the following variables :
# CPUINCNAMES
include $(PROCINC)/makefile.cpu
SYSCPUDEPS=$(addprefix $(PROCINC)/,$(CPUINCNAMES))
# Put system unit dependencies together.
SYSDEPS=$(SYSINCDEPS) $(SYSCPUDEPS)
#
# Loaders
#
prt0$(OEXT) : v2prt0.as
	$(AS) -o $(UNITTARGETDIRPREFIX)prt0$(OEXT) v2prt0.as
#
# System Units (System, Objpas, Strings)
#
system$(PPUEXT) : system.pp $(SYSDEPS)
	$(COMPILER) $(FPC_SYSTEM_OPT) -Us -Sg system.pp
	$(EXECPPAS)

#
# System Dependent Units
#
go32$(PPUEXT) : go32.pp system$(PPUEXT)
	$(COMPILER) go32.pp
	$(EXECPPAS)

dpmiexcp$(PPUEXT) : dpmiexcp.pp exceptn$(OEXT) system$(PPUEXT)
	$(COMPILER) -Sg dpmiexcp.pp
	$(EXECPPAS)

profile$(PPUEXT) : profile.pp dpmiexcp$(PPUEXT) go32$(PPUEXT)
	$(COMPILER) profile.pp
	$(EXECPPAS)

dxetype$(PPUEXT) : dxetype.pp system$(PPUEXT)
	$(COMPILER) dxetype.pp
	$(EXECPPAS)

dxeload$(PPUEXT) : dxeload.pp dxetype$(PPUEXT) system$(PPUEXT)
	$(COMPILER) dxeload.pp
	$(EXECPPAS)

emu387$(PPUEXT) : emu387.pp fpu$(OEXT) strings$(PPUEXT) dxeload$(PPUEXT) \
		  dpmiexcp$(PPUEXT)
	$(COMPILER) emu387.pp
	$(EXECPPAS)

#
# Delphi Compatible Units
#

classes$(PPUEXT) : classes.pp $(wildcard $(OBJPASDIR)/classes/*.inc) \
		   $(SYSUTILSUNIT)$(PPUEXT) $(TYPINFOUNIT)$(PPUEXT) $(RTLCONSTSUNIT)$(PPUEXT) $(TYPESUNIT)$(PPUEXT) $(FGLUNIT)$(PPUEXT) \
		   $(SORTBASEUNIT)$(PPUEXT)
	$(COMPILER) -Fi$(OBJPASDIR)/classes classes.pp

#
# Other system-independent RTL Units
#

matrix$(PPUEXT) : $(INC)/matrix.pp $(SYSTEMUNIT)$(PPUEXT)
	$(COMPILER) $(INC)/matrix.pp
	$(EXECPPAS)

ucomplex$(PPUEXT) : $(INC)/ucomplex.pp $(MATHUNIT)$(PPUEXT) system$(PPUEXT)
	$(COMPILER) $(INC)/ucomplex.pp
	$(EXECPPAS)

