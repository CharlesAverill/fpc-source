#
# $Id$
#
# Go32v2 Install file
#
title=Free Pascal Compiler 0.99.14 for Go32v2
version=0.99.14

basepath=c:\pp
binsub=\bin\go32v2
ppc386=ppc386

#
# Binary packages
#
package=basego32.zip,~B~asic system for Go32v2 (required)
package=asldgo32.zip,GNU ~L~inker and GNU Assembler for Go32v2 (required)
package=gdbgo32.zip,GNU ~D~ebugger for Go32v2
package=utilgo32.zip,GNU ~U~tilities (needed by Makefiles)
package=docs-pdf.zip,Documentation (~P~DF)
package=demo.zip,D~e~mos
package=ufclgo32.zip,~F~ree Component Libary (FCL)
package=uapigo32.zip,~A~PI units (needed by FV)
package=ubasgo32.zip,Basic units (needed by FCL)
package=unetgo32.zip,Networking units
package=umisgo32.zip,Miscellaneous units
#package=ufvgo32.zip,Free ~V~ision (FV)

#
# Source packages
#
source=basesrc.zip,Basic Makefiles for the sources
source=compsrc.zip,~C~ompiler sources
source=rtlsrc.zip,~R~un time library sources
source=fclsrc.zip,~F~ree component library (FCL) sources
source=apisrc.zip,API units sources
source=pkgssrc.zip,Packages units sources
source=utilssrc.zip,Utils sources
source=instsrc.zip,Installer sources
source=docsrc.zip,Documentation sources (La~T~eX)

cfgfile=ppc386.cfg
defaultcfg=
#
# Example ppc386.cfg for Free Pascal Compiler Version 0.99.14
#

# ----------------------
# Defines (preprocessor)
# ----------------------

#
# nested #IFNDEF, #IFDEF, #ENDIF, #ELSE, #DEFINE, #UNDEF are allowed
#
# -d is the same as #DEFINE
# -u is the same as #UNDEF
#

# When not m68k is defined at the commandline, define i386
#IFNDEF m68k
  #DEFINE i386
#ENDIF

#
# Some examples (for switches see below, and the -? helppages)
#
# Try compiling with the -dRELEASE or -dDEBUG on the commandline
#

# For a release compile with optimizes and strip debuginfo
#IFDEF RELEASE
  -OG2p2
  -Xs
  #WRITE Compiling Release Version
#ENDIF

# For a debug version compile with debuginfo and all codegeneration checks on
#IFDEF DEBUG
  -g
  -Crtoi
  #WRITE Compiling Debug Version
#ENDIF

# ----------------
# Parsing switches
# ----------------

# All assembler blocks are intel styled by default
#-Rintel

# All assembler blocks are AT&T styled by default
#-Ratt

# All assembler blocks are directly copied to asm
#-Rdirect

# Semantic checking
# -S2   switch some Delphi 2 extension on
# -Sc   supports operators like C (*=,+=,/= and -=)
# -Sg   allows LABEL and GOTO
# -Si   support C++ stlyed INLINE
# -Sm   support macros like C (global)
# -So   tries to be TP/BP 7.0 compatible
# -Ss   constructor name must be init (destructor must be done)
# -St   allows static keyword in objects

# Allow goto, inline, C-operators
-Sgic

# ---------------
# Code generation
# ---------------

# Uncomment the next line if you always want static/dynamic units by default
# (can be overruled with -CD, -CS at the commandline)
#-CS
#-CD

# Set the default heapsize to 8Mb
#-Ch8000000

# Set default codegeneration checks (iocheck, overflow, range, stack)
#-Ci
#-Co
#-Cr
#-Ct

# Optimizer switches
# -Og        generate smaller code
# -OG        generate faster code (default)
# -Or        keep certain variables in registers (still BUGGY!!!)
# -Ou        enable uncertain optimizations (see docs)
# -O1        level 1 optimizations (quick optimizations)
# -O2        level 2 optimizations (-O1 + slower optimizations)
# -O3        level 3 optimizations (same as -O2u)
# -Op        target processor
#     -Op1  set target processor to 386/486
#     -Op2  set target processor to Pentium/PentiumMMX (tm)
#     -Op3  set target processor to PPro/PII/c6x86/K6 (tm)

# Optimize always for Size and Pentium
#-Og2p2


# -----------------------
# Set Filenames and Paths
# -----------------------

# Both slashes and backslashes are allowed in paths

# path to the messagefile, not necessary anymore but can be used to override
# the default language
#-Fr$1/msg/errore.msg
#-Fr$1/msg/errorn.msg
#-Fr$1/msg/errores.msg
#-Fr$1/msg/errord.msg
#-Fr$1/msg/errorr.msg

# path to the gcclib
#-Fl$1/lib

# searchpath for includefiles
-Fi$1/source/rtl/inc;$1/source/rtl/i386

# searchpath for objectfiles
#-Fo$1/source/rtl/inc;$1/source/rtl/i386

# searchpath for units and other system dependent things
-Fu$1/units/$TARGET
-Fu$1/units/$TARGET/*
-Fu$1/units/$TARGET/rtl

# searchpath for libraries
#-Fl$1/lib
#-Fl/lib;/usr/lib

# searchpath for tools
-FD$1/bin/$TARGET


# -------------
# Linking
# -------------

# generate always debugging information for GDB (slows down the compiling
# process)
#-g

# always pass an option to the linker
#-k-s

# Always strip debuginfo from the executable
-Xs


# -------------
# Miscellaneous
# -------------

# Write always a nice FPC logo ;)
-l

# Verbosity
# e : Show errors (default)       d : Show debug info
# w : Show warnings               u : Show used files
# n : Show notes                  t : Show tried files
# h : Show hints                  m : Show defined macros
# i : Show general info           p : Show compiled procedures
# l : Show linenumbers            c : Show conditionals
# a : Show everything             0 : Show nothing (except errors)

# Display Info, Warnings, Notes and Hints
-viwnh
# If you don't want so much verbosity use
#-vw

#
# That's all folks
#
endcfg
