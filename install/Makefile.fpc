#
#   Makefile.fpc for Free Component Library
#

[defaults]
defaultrule=help

[sections]
info=0
zipinstall=1

[tools]
toolzip=1
toolupx=1
tooldate=1


[presettings]
OLDFPCDIR:=$(FPCDIR)

checkfpcdir:
ifdef OLDFPCDIR
ifneq ($(OLDFPCDIR),)
FPCDIRSET=fpcdirset
fpcdirset:
        @echo You must unset FPCDIR to use this Makefile
        @exit 1
endif
endif

# All target
ifndef ALLTARGET
ifeq ($(OS_TARGET),win32)
ALLTARGET=smart
else
ifeq ($(OS_TARGET),go32v2)
ALLTARGET=smart
else
ALLTARGET=all
endif
endif
endif

# Prefix for units
ifeq ($(OS_TARGET),linux)
PKGPRE=units
else
PKGPRE=u
endif

# Test dir if none specified
ifndef PREFIXINSTALLDIR
PREFIXINSTALLDIR=/pptest
endif

# Directory to the base of the CVS tree
CVSBASE=..

# Always compile for release
override RELEASE=1

# Temporary path to pack a file
BASEPACKDIR=$(BASEDIR)/basepack

# Use new ppc386
PPNEW=$(BASEDIR)/$(CVSBASE)/compiler/ppc386$(EXEEXT)
PPUFILESNEW=$(BASEDIR)/$(CVSBASE)/utils/ppufiles$(EXEEXT)

# Build/install options
BUILDOPTS=FPC=$(PPNEW) RELEASE=1
INSTALLOPTS=FPC=$(PPNEW) PPUFILES=$(PPUFILESNEW) ZIPDESTDIR=$(BASEDIR)


[rules]
.PHONY: help checkfpcdir

help:
        @echo
        @echo Possible targets are:
        @echo
        @echo go32v2,win32,linux,source
        @echo
        @exit


##########################################################################
# Install
##########################################################################

.PHONY: installer

INSTALLERBUILDDIR=../fpinst

installer:
        $(COPYTREE) fpinst $(INSTALLERBUILDDIR)
        $(MAKE) -C $(INSTALLERBUILDDIR) all RELEASE=1
        $(MOVE) $(INSTALLERBUILDDIR)/install.exe .
ifdef UPXPROG
        -$(UPXPROG) install.exe
endif
        $(DELTREE) $(INSTALLERBUILDDIR)

installersrc:
        $(COPYTREE) fpinst $(INSTALLERBUILDDIR)
        $(MAKE) -C $(INSTALLERBUILDDIR) zipsourceinstall
        $(DELTREE) $(INSTALLERBUILDDIR)


##########################################################################
# Basego32.zip
##########################################################################

.PHONY: clean build installbase zipinstall zipinstallbase zipinstallfcl \
        zipinstallpackages

export RELEASE DESTZIPDIR

clean:
        $(DEL) build-stamp

build: build-stamp
build-stamp: $(FPCDIRSET)
# create new compiler
        -$(MAKE) -C $(CVSBASE) compiler_cycle
# clean
        $(MAKE) -C $(CVSBASE) rtl_clean
        $(MAKE) -C $(CVSBASE) api_clean
        $(MAKE) -C $(CVSBASE) fcl_clean
        $(MAKE) -C $(CVSBASE) packages_clean
        $(MAKE) -C $(CVSBASE) utils_clean
# build everything
        $(MAKE) -C $(CVSBASE) rtl_$(ALLTARGET) $(BUILDOPTS)
        $(MAKE) -C $(CVSBASE) api_$(ALLTARGET) $(BUILDOPTS)
        $(MAKE) -C $(CVSBASE) fcl_$(ALLTARGET) $(BUILDOPTS)
        $(MAKE) -C $(CVSBASE) packages_$(ALLTARGET) $(BUILDOPTS)
        $(MAKE) -C $(CVSBASE) utils_all $(BUILDOPTS)

        $(ECHO) Build > build-stamp

installbase: build-stamp
# create dirs
        $(MKDIR) $(BASEINSTALLDIR)
        $(MKDIR) $(DOCINSTALLDIR)
        $(MKDIR) $(BININSTALLDIR)
# readme & whatsnew and docs
        $(COPY) doc/*.txt doc/copying* $(DOCINSTALLDIR)
# bingo32 (cwsdpmi,wmemu387.dxe)
ifeq ($(OS_TARGET),go32v2)
        $(COPY) bingo32/* $(BININSTALLDIR)
endif
# manpages for linux
ifeq ($(OS_TARGET),linux)
        $(MAKE) -C man installman
endif
# install generated things
        $(MAKE) -C $(CVSBASE) compiler_install $(INSTALLOPTS)
        $(MAKE) -C $(CVSBASE) rtl_install $(INSTALLOPTS)
        $(MAKE) -C $(CVSBASE) utils_install $(INSTALLOPTS)

install: build-stamp
        $(MAKE) zipinstall ZIPTARGET=installbase PACKAGENAME=base
        $(MAKE) -C $(CVSBASE) api_zipinstall $(INSTALLOPTS) PACKAGEPREFIX=$(PKGPRE)
        $(MAKE) -C $(CVSBASE) fcl_zipinstall $(INSTALLOPTS) PACKAGEPREFIX=$(PKGPRE)
        $(MAKE) -C $(CVSBASE) packages_zipinstall $(INSTALLOPTS) PACKAGEPREFIX=$(PKGPRE)


##########################################################################
# Docs
##########################################################################

.PHONY: docspdf docs docsrcinstall docsrc

docspdf:
        $(MAKE) -C $(CVSBASE)/docs pdfinstall

docs:
        $(MAKE) zipinstall ZIPTARGET=docspdf ZIPNAME=docs

docsrcinstall:
        $(MAKE) -C $(CVSBASE)/docs clean
        $(MKDIR) $(SOURCEINSTALLDIR)
        $(COPYTREE) $(CVSBASE)/docs $(SOURCEINSTALLDIR)

docsrc:
        $(MAKE) zipinstall ZIPTARGET=docsrcinstall ZIPNAME=docsrc


##########################################################################
# Demos
##########################################################################

.PHONY: demo demoinstall

demoinstall:
        $(COPYTREE) demo $(PREFIXINSTALLDIR)

demo:
        $(MAKE) zipinstall ZIPTARGET=demoinstall ZIPNAME=demo



##########################################################################
# Source targets
##########################################################################

sourcebase:
# base Makefiles needed for sources
        $(MKDIR) $(SOURCEINSTALLDIR)
        $(MKDIR) $(SOURCEINSTALLDIR)/rtl
        $(MKDIR) $(SOURCEINSTALLDIR)/packages
        $(COPY) $(CVSBASE)/Makefile*  $(SOURCEINSTALLDIR)
        $(COPY) $(CVSBASE)/rtl/Makefile* $(SOURCEINSTALLDIR)/rtl
        $(COPY) $(CVSBASE)/packages/Makefile* $(SOURCEINSTALLDIR)/packages

source:
        $(MAKE) zipinstall ZIPTARGET=sourcebase ZIPNAME=basesrc
        $(MAKE) -C $(CVSBASE) compiler_zipsourceinstall
        $(MAKE) -C $(CVSBASE) rtl_zipsourceinstall
        $(MAKE) -C $(CVSBASE) api_zipsourceinstall
        $(MAKE) -C $(CVSBASE) fcl_zipsourceinstall
        $(MAKE) -C $(CVSBASE) packages_zipsourceinstall
        $(MAKE) -C $(CVSBASE) utils_zipsourceinstall
        $(MAKE) installersrc
        $(MAKE) docsrc


##########################################################################
# OS targets
##########################################################################

.PHONY: go32v2 win32 linux

go32v2:
        $(MAKE) install OS_TARGET=go32v2

win32:
        $(MAKE) install OS_TARGET=win32

linux:
        $(MAKE) install OS_TARGET=linux



