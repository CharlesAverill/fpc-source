
                            Free Pascal Compiler

                        Version 1.9.4 aka 2.0.0-Beta3

******************************************************************************
                      Whats New in 1.9.4 aka 2.0.0-Beta3
******************************************************************************

Compiler:
  + ARM (Linux) compiler
  + Powerpc Darwin (MacOSX) support
  + reintroduce keyword support
  + added prefetch(const mem) support
  + MacPas compile mode
  + -gv to generate an executable that can be run under Valgrind >= 2.1
  * register allocator fixes and tweaks
  * better support for preprocessor $IF expressions
  * better overloaded operator support
  * Win32 DLL export table fixes
  * stabs (debuginfo) generation cleanups
  * enum names in RTTI are now in their original case
  * record alignment fixes
  * lots of bug fixes

RTL:
  + ARM Linux support
  + Powerpc Darwin support
  + Sysutils.RaiseLastOSError added
  + Sysutils.GetLastOSError added
  + Classes.TOwnedCollection added
  + Sysutils.FileIsReadOnly added
  * Better support for Libc based RTL (FPC_USE_LIBC)
  * 64bit cleanup for future x86_64 port
  * ExecuteProcess fixes
  * Linux use getdents syscall instead of deprecated readdir

FCL:
  + SDF DB backend
  + TGA support in fpImage
  * Lot of fixes to fpImage classes

Misc:
  * Documentation updates
  * Testsuite updates to store testrun results in a database
  * Testsuite updates for cross platform testing, with remote rsh/ssh support


******************************************************************************
                      Whats New in 1.9.2 aka 2.0.0-Beta2
******************************************************************************

Compiler:
  + PowerPC compiler
  + sse/sse2 code generation support
  + "global" property support
  * improved inlining support
  * optimizer enabled again
  * uses register calling conventions by default
  * $fputype directive
  + properties of type single can have default values
  + support of $IF DECLARED()
  + support of DQWORD in inline intel assembler code
  * lots of bug fixes

RTL:
  * more improvements for unix runtime library
  * using FPC_USE_LIBC allows to compile an rtl which uses libc instead of syscalls
  + System.Initialize
  + Sysutils.ExecuteProcess
  + System.WideStringManager
  + System.PtrInt and System.PtrUInt
  * ipv6 support
  * lots of bug fixes

FCL:
  + sqlite support
  * bug fixes

Misc:
  * improved docs

******************************************************************************
                      Whats New in 1.9.0 aka 2.0.0-Beta1
******************************************************************************

Compiler:
  + dynamic arrays
  + interfaces
  + variants
  + full widestring support
  + default parameters
  + cross name scope overloading
  + support for the PowerPC, Sparc and ARM processor, installation packages will follow within the
    next weeks
  + new and more sophisticated register allocator
  + inlining across units
  + register calling conventions
  + SSE and SSE2 support for inline assembler
  + PIC code generation
  + new language mode: "Mac Pascal"
  + full boolean evaluation is now also available
  + threadvar support, enabled by using {$threading on}
  * support of int64 integer constants
  * improved delphi compatibility in -Sd mode
  * a lot of bug fixes
  * large parts of the compiler are rewritten to create a more stable,
    portable and maintainable compiler

RTL:
  + multithreading support
  * completely rewritten unix runtime library
  * improved delphi compatiblity
  * significantly improved speed of exception related code
  * prepared for big endian and 64 Bit CPUs
  * a lot of bug fixes

FCL:
  + tdataset support
  + html generator
  + 64 Bit file handling
  * a lot of bug fixes

Docs:
  * adapted to reflect new language features

IDE:
  * a lot of bug fixes

Misc:
  * improved cross compilation
