{$ifdef Delphi}
const fpcmakeini : array[0..99] of string[240]=(
{$else Delphi}
const fpcmakeini : array[0..99,1..240] of char=(
{$endif Delphi}
  ';'#010+
  '; $Id$'#010+
  ';'#010+
  '; Templates used by fpcmake to create a Makefile from Makefile.fpc'#010+
  ';'#010+
  #010+
  '[osdetect]'#010+
  '#####################################################################'#010+
  '# Autodetect OS (Linux or Do','s or Windows NT)'#010+
  '# define inlinux when running under linux'#010+
  '# define inWinNT when running under WinNT'#010+
  '#####################################################################'#010+
  #010+
  '# We need only / in the path'#010+
  'override PATH:=$(subst \,/,$(PATH))'#010+
  #010+
  '# ','Search for PWD and determine also if we are under linux'#010+
  'PWD:=$(strip $(wildcard $(addsuffix /pwd.exe,$(subst ;, ,$(PATH)))))'#010+
  'ifeq ($(PWD),)'#010+
  'PWD:=$(strip $(wildcard $(addsuffix /pwd,$(subst :, ,$(PATH)))))'#010+
  'ifeq ($(PWD),)'#010+
  'nopwd:'#010+
  '        @echo',' You need the GNU utils package to use this Makefile!'#010+
  '        @echo Get ftp://ftp.freepascal.org/pub/fpc/dist/go32v2/utilgo3'+
  '2.zip'#010+
  '        @exit'#010+
  'else'#010+
  'inlinux=1'#010+
  'endif'#010+
  'else'#010+
  'PWD:=$(firstword $(PWD))'#010+
  'endif'#010+
  #010+
  '# Detect NT - NT sets OS to Windows_NT',#010+
  'ifndef inlinux'#010+
  'ifeq ($(OS),Windows_NT)'#010+
  'inWinNT=1'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# Detect OS/2 - OS/2 has OS2_SHELL defined'#010+
  'ifndef inlinux'#010+
  'ifndef inWinNT'#010+
  'ifdef OS2_SHELL'#010+
  'inOS2=1'#010+
  'endif'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# The extension of executables'#010+
  'ifdef inlinux'#010+
  'EXEEXT='#010+
  'else'#010+
  'EXE','EXT=.exe'#010+
  'endif'#010+
  #010+
  '# The path which is search separated by spaces'#010+
  'ifdef inlinux'#010+
  'SEARCHPATH=$(subst :, ,$(PATH))'#010+
  'else'#010+
  'SEARCHPATH=$(subst ;, ,$(PATH))'#010+
  'endif'#010+
  #010+
  '[defaulttarget]'#010+
  '#####################################################################'#010+
  '#',' Default target'#010+
  '#####################################################################'#010+
  #010+
  '[fpcdetect]'#010+
  '#####################################################################'#010+
  '# FPC version/target Detection'#010+
  '########################################','############################'+
  '#'#010+
  #010+
  '# What compiler to use ?'#010+
  'ifndef FPC'#010+
  'ifdef inOS2'#010+
  'export FPC=ppos2$(EXEEXT)'#010+
  'else'#010+
  'export FPC=ppc386$(EXEEXT)'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# Target OS'#010+
  'ifndef OS_TARGET'#010+
  'export OS_TARGET:=$(shell $(FPC) -iTO)'#010+
  'endif'#010+
  #010+
  '# Source OS'#010+
  'ifn','def OS_SOURCE'#010+
  'export OS_SOURCE:=$(shell $(FPC) -iSO)'#010+
  'endif'#010+
  #010+
  '# Target CPU'#010+
  'ifndef CPU_TARGET'#010+
  'export CPU_TARGET:=$(shell $(FPC) -iTP)'#010+
  'endif'#010+
  #010+
  '# Source CPU'#010+
  'ifndef CPU_SOURCE'#010+
  'export CPU_SOURCE:=$(shell $(FPC) -iSP)'#010+
  'endif'#010+
  #010+
  '# FPC version'#010+
  'ifndef FPC','_VERSION'#010+
  'export FPC_VERSION:=$(shell $(FPC) -iV)'#010+
  'endif'#010+
  #010+
  #010+
  '[defaultsettings]'#010+
  '#####################################################################'#010+
  '# Default Settings'#010+
  '#####################################################################'#010+
  #010+
  '# Rel','ease ? Then force OPT and don'#039't use extra opts via commandl'+
  'ine'#010+
  'ifdef RELEASE'#010+
  'override OPT:=-Xs -OG2p3 -n'#010+
  'endif'#010+
  #010+
  '# Verbose settings (warning,note,info)'#010+
  'ifdef VERBOSE'#010+
  'override OPT+=-vwni'#010+
  'endif'#010+
  #010+
  #010+
  '[usersettings]'#010+
  '################################','####################################'+
  '#'#010+
  '# User Settings'#010+
  '#####################################################################'#010+
  #010+
  #010+
  '[dir_default]'#010+
  '#####################################################################'#010+
  '# Default Directories'#010+
  '########','############################################################'+
  '#'#010+
  #010+
  '# Base dir'#010+
  'ifdef PWD'#010+
  'BASEDIR:=$(shell $(PWD))'#010+
  'else'#010+
  'BASEDIR=.'#010+
  'endif'#010+
  #010+
  '# this can be set to '#039'rtl'#039' when the RTL units are installed'#010+
  'ifndef UNITPREFIX'#010+
  'UNITPREFIX=units'#010+
  'endif'#010+
  #010+
  '# set t','he prefix directory where to install everything'#010+
  'ifndef PREFIXINSTALLDIR'#010+
  'ifdef inlinux'#010+
  'export PREFIXINSTALLDIR=/usr'#010+
  'else'#010+
  'export PREFIXINSTALLDIR=/pp'#010+
  'endif'#010+
  'endif'#010+
  #010+
  #010+
  '[dir_install]'#010+
  '################################################################','####'+
  '#'#010+
  '# Install Directories'#010+
  '#####################################################################'#010+
  #010+
  '# set the base directory where to install everything'#010+
  'ifndef BASEINSTALLDIR'#010+
  'ifdef inlinux'#010+
  'BASEINSTALLDIR=$(PREFIXINSTALLDIR)/lib/fpc/$(FPC_VER','SION)'#010+
  'else'#010+
  'BASEINSTALLDIR=$(PREFIXINSTALLDIR)'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# set the directory where to install the binaries'#010+
  'ifndef BININSTALLDIR'#010+
  'ifdef inlinux'#010+
  'BININSTALLDIR=$(PREFIXINSTALLDIR)/bin'#010+
  'else'#010+
  'BININSTALLDIR=$(BASEINSTALLDIR)/bin/$(OS_TARGET)'#010+
  'endi','f'#010+
  'endif'#010+
  #010+
  '# set the directory where to install the units.'#010+
  'ifndef UNITINSTALLDIR'#010+
  'UNITINSTALLDIR=$(BASEINSTALLDIR)/$(UNITPREFIX)/$(OS_TARGET)'#010+
  'endif'#010+
  #010+
  '# Where to install shared libraries'#010+
  'ifndef LIBINSTALLDIR'#010+
  'ifdef inlinux'#010+
  'LIBINSTALLDIR=$(PREFIXI','NSTALLDIR)/lib'#010+
  'else'#010+
  'LIBINSTALLDIR=$(UNITINSTALLDIR)'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# Where the source files will be stored'#010+
  'ifndef SOURCEINSTALLDIR'#010+
  'ifdef inlinux'#010+
  'SOURCEINSTALLDIR=$(PREFIXINSTALLDIR)/src/fpc-$(FPC_VERSION)'#010+
  'else'#010+
  'SOURCEINSTALLDIR=$(BASEINSTALLDI','R)/source'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# Where the doc files will be stored'#010+
  'ifndef DOCINSTALLDIR'#010+
  'ifdef inlinux'#010+
  'DOCINSTALLDIR=$(PREFIXINSTALLDIR)/doc/fpc/$(FPC_VERSION)'#010+
  'else'#010+
  'DOCINSTALLDIR=$(BASEINSTALLDIR)/doc'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# Where the some extra (data)files',' will be stored'#010+
  'ifndef EXTRAINSTALLDIR'#010+
  'EXTRAINSTALLDIR=$(BASEINSTALLDIR)'#010+
  'endif'#010+
  #010+
  #010+
  #010+
  '[dir_gcclib]'#010+
  '# On linux, try to find where libgcc.a is.'#010+
  'ifdef inlinux'#010+
  'ifndef GCCLIBDIR'#010+
  'export GCCLIBDIR:=$(shell dirname `(gcc -v 2>&1)| head -n 1| awk '#039'{'+
  ' pri','nt $$4 } '#039'`)'#010+
  'endif'#010+
  'endif'#010+
  #010+
  #010+
  '[dir_otherlib]'#010+
  '# Where to find other libraries'#010+
  'ifdef inlinux'#010+
  'ifndef OTHERLIBDIR'#010+
  'export OTHERLIBDIR:=$(shell grep -v "^\#" /etc/ld.so.conf | awk '#039'{'+
  ' ORS=" "; print $1 }'#039')'#010+
  'endif'#010+
  'endif'#010+
  #010+
  #010+
  '[command_begin]'#010+
  '##############','######################################################'+
  '#'#010+
  '# Compiler Command Line'#010+
  '#####################################################################'#010+
  #010+
  '# Load commandline OPTDEF and add FPC_CPU define'#010+
  'override FPCOPTDEF:=-d$(CPU_TARGET)'#010+
  #010+
  '# L','oad commandline OPT and add target and unit dir to be sure'#010+
  'ifneq ($(OS_TARGET),$(OS_SOURCE))'#010+
  'override FPCOPT+=-T$(OS_TARGET)'#010+
  'endif'#010+
  #010+
  '[command_needopt]'#010+
  'ifdef NEEDOPT'#010+
  'override FPCOPT+=$(NEEDOPT)'#010+
  'endif'#010+
  #010+
  '[command_fpcdir]'#010+
  '# RTL first and then Uni','t dir (a unit can override RTLunit). Don'#039+
  't add the'#010+
  '# dirs if fpcdir=. which can be used for the rtl makefiles'#010+
  'ifdef FPCDIR'#010+
  'ifneq ($(FPCDIR),.)'#010+
  'override FPCOPT+=-Fu$(FPCDIR)/rtl/$(OS_TARGET) -Fu$(FPCDIR)/units/$(OS'+
  '_TARGET)'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '[comm','and_needunit]'#010+
  'ifdef NEEDUNITDIR'#010+
  'override FPCOPT+=$(addprefix -Fu,$(NEEDUNITDIR))'#010+
  'endif'#010+
  #010+
  '[command_needlib]'#010+
  'ifdef NEEDLIBDIR'#010+
  'override FPCOPT+=$(addprefix -Fl,$(NEEDLIBDIR))'#010+
  'endif'#010+
  #010+
  '[command_needobj]'#010+
  'ifdef NEEDOBJDIR'#010+
  'override FPCOPT+=$(addprefi','x -Fo,$(NEEDOBJDIR))'#010+
  'endif'#010+
  #010+
  '[command_needinc]'#010+
  'ifdef NEEDINCDIR'#010+
  'override FPCOPT+=$(addprefix -Fi,$(NEEDINCDIR))'#010+
  'endif'#010+
  #010+
  '[command_gcclib]'#010+
  '# Add GCC lib path if asked'#010+
  'ifdef GCCLIBDIR'#010+
  'override FPCOPT+=-Fl$(GCCLIBDIR)'#010+
  'endif'#010+
  #010+
  '[command_otherlib]'#010+
  '# ','Add Other dirs path if asked'#010+
  'ifdef OTHERLIBDIR'#010+
  'override FPCOPT+=$(addprefix -Fl,$(OTHERLIBDIR))'#010+
  'endif'#010+
  #010+
  '[command_target]'#010+
  '# Target dirs'#010+
  'ifdef TARGETDIR'#010+
  'override FPCOPT+=-FE$(TARGETDIR)'#010+
  'endif'#010+
  #010+
  '[command_unittarget]'#010+
  'ifdef UNITTARGETDIR'#010+
  'override ','FPCOPT+=-FU$(UNITTARGETDIR)'#010+
  'endif'#010+
  #010+
  '[command_end]'#010+
  '# Smartlinking'#010+
  'ifdef SMARTLINK'#010+
  'override FPCOPT+=-CX'#010+
  'endif'#010+
  #010+
  '# Debug'#010+
  'ifdef DEBUG'#010+
  'override FPCOPT+=-g'#010+
  'endif'#010+
  #010+
  '# Add commandline options'#010+
  'ifdef OPT'#010+
  'override FPCOPT+=$(OPT)'#010+
  'endif'#010+
  'ifdef UNITDIR'#010+
  'overr','ide FPCOPT+=$(addprefix -Fu,$(UNITDIR))'#010+
  'endif'#010+
  'ifdef LIBDIR'#010+
  'override FPCOPT+=$(addprefix -Fl,$(LIBDIR))'#010+
  'endif'#010+
  'ifdef OBJDIR'#010+
  'override FPCOPT+=$(addprefix -Fo,$(OBJDIR))'#010+
  'endif'#010+
  'ifdef INCDIR'#010+
  'override FPCOPT+=$(addprefix -Fi,$(INCDIR))'#010+
  'endif'#010+
  #010+
  '# Ad','d defines from FPCOPTDEF to FPCOPT'#010+
  'ifdef FPCOPTDEF'#010+
  'override FPCOPT+=$(FPCOPTDEF)'#010+
  'endif'#010+
  #010+
  '# Was a config file specified ?'#010+
  'ifdef CFGFILE'#010+
  'override FPCOPT+=@$(CFGFILE)'#010+
  'endif'#010+
  #010+
  'override COMPILER=$(FPC) $(FPCOPT)'#010+
  #010+
  #010+
  '[shelltools]'#010+
  '####################','################################################'+
  '#'#010+
  '# Shell tools'#010+
  '#####################################################################'#010+
  #010+
  '# To copy pograms'#010+
  'ifndef COPY'#010+
  'export COPY:=cp -fp'#010+
  'endif'#010+
  #010+
  '# To move pograms'#010+
  'ifndef MOVE'#010+
  'export MOVE:=mv -f',#010+
  'endif'#010+
  #010+
  '# Check delete program'#010+
  'ifndef DEL'#010+
  'export DEL:=rm -f'#010+
  'endif'#010+
  #010+
  '# Check deltree program'#010+
  'ifndef DELTREE'#010+
  'export DELTREE:=rm -rf'#010+
  'endif'#010+
  #010+
  '# To install files'#010+
  'ifndef INSTALL'#010+
  'ifdef inlinux'#010+
  'export INSTALL:=install -m 644'#010+
  'else'#010+
  'export INSTALL:=$(CO','PY)'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# To install programs'#010+
  'ifndef INSTALLEXE'#010+
  'ifdef inlinux'#010+
  'export INSTALLEXE:=install -m 755'#010+
  'else'#010+
  'export INSTALLEXE:=$(COPY)'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# To make a directory.'#010+
  'ifndef MKDIR'#010+
  'ifdef inlinux'#010+
  'export MKDIR:=install -m 755 -d'#010+
  'else'#010+
  'exp','ort MKDIR:=ginstall -m 755 -d'#010+
  'endif'#010+
  'endif'#010+
  #010+
  #010+
  '[tool_default]'#010+
  '#####################################################################'#010+
  '# Default Tools'#010+
  '#####################################################################'#010+
  #010+
  '# assembler, redefine it',' if cross compiling'#010+
  'ifndef AS'#010+
  'AS=as'#010+
  'endif'#010+
  #010+
  '# linker, but probably not used'#010+
  'ifndef LD'#010+
  'LD=ld'#010+
  'endif'#010+
  #010+
  '# ppas.bat / ppas.sh'#010+
  'ifdef inlinux'#010+
  'PPAS=ppas.sh'#010+
  'else'#010+
  'ifdef inOS2'#010+
  'PPAS=ppas.cmd'#010+
  'else'#010+
  'PPAS=ppas.bat'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# also call ppas if with comman','d option -s'#010+
  'ifeq (,$(findstring -s ,$(COMPILER)))'#010+
  'EXECPPAS='#010+
  'else'#010+
  'EXECPPAS=@$(PPAS)'#010+
  'endif'#010+
  #010+
  '# ldconfig to rebuild .so cache'#010+
  'ifdef inlinux'#010+
  'LDCONFIG=ldconfig'#010+
  'else'#010+
  'LDCONFIG='#010+
  'endif'#010+
  #010+
  '# echo'#010+
  'ifndef ECHO'#010+
  'ECHO:=$(strip $(wildcard $(addsuffix /echo$(E','XEEXT),$(SEARCHPATH))))'+
  #010+
  'ifeq ($(ECHO),)'#010+
  'export ECHO:=echo'#010+
  'else'#010+
  'export ECHO:=$(firstword $(ECHO))'#010+
  'endif'#010+
  'endif'#010+
  #010+
  #010+
  '[tool_ppdep]'#010+
  '# ppdep'#010+
  'ifndef PPDEP'#010+
  'PPDEP:=$(strip $(wildcard $(addsuffix /ppdep$(EXEEXT),$(SEARCHPATH))))'+
  #010+
  'ifeq ($(PPDEP),)'#010+
  'PPDEP='#010,
  'else'#010+
  'export PPDEP:=$(firstword $(PPDEP))'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '[tool_ppumove]'#010+
  '# ppumove'#010+
  'ifndef PPUMOVE'#010+
  'PPUMOVE:=$(strip $(wildcard $(addsuffix /ppumove$(EXEEXT),$(SEARCHPATH'+
  '))))'#010+
  'ifeq ($(PPUMOVE),)'#010+
  'PPUMOVE='#010+
  'else'#010+
  'export PPUMOVE:=$(firstword $(PPUMOVE)',')'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '[tool_ppufiles]'#010+
  '# ppufiles'#010+
  'ifndef PPUFILES'#010+
  'PPUFILES:=$(strip $(wildcard $(addsuffix /ppufiles$(EXEEXT),$(SEARCHPA'+
  'TH))))'#010+
  'ifeq ($(PPUFILES),)'#010+
  'PPUFILES='#010+
  'else'#010+
  'export PPUFILES:=$(firstword $(PPUFILES))'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '[tool_data2inc]',#010+
  '# data2inc'#010+
  'ifndef DATA2INC'#010+
  'DATA2INC:=$(strip $(wildcard $(addsuffix /data2inc$(EXEEXT),$(SEARCHPA'+
  'TH))))'#010+
  'ifeq ($(DATA2INC),)'#010+
  'DATA2INC='#010+
  'else'#010+
  'export DATA2INC:=$(firstword $(DATA2INC))'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '[tool_diff]'#010+
  '# diff'#010+
  'ifndef DIFF'#010+
  'DIFF:=$(strip ','$(wildcard $(addsuffix /diff$(EXEEXT),$(SEARCHPATH))))'+
  #010+
  'ifeq ($(DIFF),)'#010+
  'DIFF='#010+
  'else'#010+
  'export DIFF:=$(firstword $(DIFF))'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '[tool_cmp]'#010+
  '# cmp'#010+
  'ifndef CMP'#010+
  'CMP:=$(strip $(wildcard $(addsuffix /cmp$(EXEEXT),$(SEARCHPATH))))'#010+
  'ifeq ($(CMP),)'#010+
  'C','MP='#010+
  'else'#010+
  'export CMP:=$(firstword $(CMP))'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '[tool_sed]'#010+
  '# Sed'#010+
  'ifndef SED'#010+
  'SED:=$(strip $(wildcard $(addsuffix /sed$(EXEEXT),$(SEARCHPATH))))'#010+
  'ifeq ($(SED),)'#010+
  'SED='#010+
  'else'#010+
  'export SED:=$(firstword $(SED))'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '[tool_upx]'#010+
  '# Look if ','UPX is found for go32v2 and win32. We can'#039't use $UPX b'+
  'ecuase'#010+
  '# upx uses that one itself (PFV)'#010+
  'ifndef UPXPROG'#010+
  'ifeq ($(OS_TARGET),go32v2)'#010+
  'UPXPROG:=1'#010+
  'endif'#010+
  'ifeq ($(OS_TARGET),win32)'#010+
  'UPXPROG:=1'#010+
  'endif'#010+
  'ifdef UPXPROG'#010+
  'UPXPROG:=$(strip $(wildcard $(','addsuffix /upx$(EXEEXT),$(SEARCHPATH))'+
  '))'#010+
  'ifeq ($(UPXPROG),)'#010+
  'UPXPROG='#010+
  'else'#010+
  'export UPXPROG:=$(firstword $(UPXPROG))'#010+
  'endif'#010+
  'else'#010+
  'UPXPROG='#010+
  'endif'#010+
  'endif'#010+
  #010+
  '[tool_date]'#010+
  '# gdate/date'#010+
  'ifndef DATE'#010+
  'DATE:=$(strip $(wildcard $(addsuffix /date$(EXEEXT),$(SE','ARCHPATH))))'+
  #010+
  'ifeq ($(DATE),)'#010+
  'DATE:=$(strip $(wildcard $(addsuffix /gdate$(EXEEXT),$(SEACHPATH))))'#010+
  'ifeq ($(DATE),)'#010+
  'DATE='#010+
  'else'#010+
  'export DATE:=$(firstword $(DATE))'#010+
  'endif'#010+
  'else'#010+
  'export DATE:=$(firstword $(DATE))'#010+
  'endif'#010+
  'endif'#010+
  #010+
  'ifdef DATE'#010+
  'DATESTR:=$(s','hell $(DATE) +%Y%m%d)'#010+
  'else'#010+
  'DATESTR='#010+
  'endif'#010+
  #010+
  '[tool_zip]'#010+
  '# ZipProg, you can'#039't use Zip as the var name (PFV)'#010+
  'ifndef ZIPPROG'#010+
  'ZIPPROG:=$(strip $(wildcard $(addsuffix /zip$(EXEEXT),$(SEARCHPATH))))'+
  #010+
  'ifeq ($(ZIPPROG),)'#010+
  'ZIPPROG='#010+
  'else'#010+
  'export ZIPPROG:=','$(firstword $(ZIPPROG)) -D9 -r'#010+
  'endif'#010+
  'endif'#010+
  #010+
  'ifndef ZIPEXT'#010+
  'ZIPEXT=.zip'#010+
  'endif'#010+
  #010+
  #010+
  '[extensions]'#010+
  '#####################################################################'#010+
  '# Default extensions'#010+
  '##########################################################','##########'+
  '#'#010+
  #010+
  '# Default needed extensions (Go32v2,Linux)'#010+
  'LOADEREXT=.as'#010+
  'PPLEXT=.ppl'#010+
  'PPUEXT=.ppu'#010+
  'OEXT=.o'#010+
  'ASMEXT=.s'#010+
  'SMARTEXT=.sl'#010+
  'STATICLIBEXT=.a'#010+
  'SHAREDLIBEXT=.so'#010+
  'PACKAGESUFFIX='#010+
  #010+
  '# Go32v1'#010+
  'ifeq ($(OS_TARGET),go32v1)'#010+
  'PPUEXT=.pp1'#010+
  'OEXT=.o1'#010+
  'ASMEXT=.s','1'#010+
  'SMARTEXT=.sl1'#010+
  'STATICLIBEXT=.a1'#010+
  'SHAREDLIBEXT=.so1'#010+
  'PACKAGESUFFIX=v1'#010+
  'endif'#010+
  #010+
  '# Go32v2'#010+
  'ifeq ($(OS_TARGET),go32v2)'#010+
  'PACKAGESUFFIX=go32'#010+
  'endif'#010+
  #010+
  '# Linux'#010+
  'ifeq ($(OS_TARGET),linux)'#010+
  'PACKAGESUFFIX=linux'#010+
  'endif'#010+
  #010+
  '# Win32'#010+
  'ifeq ($(OS_TARGET),win32)'#010+
  'PPUEXT=.','ppw'#010+
  'OEXT=.ow'#010+
  'ASMEXT=.sw'#010+
  'SMARTEXT=.slw'#010+
  'STATICLIBEXT=.aw'#010+
  'SHAREDLIBEXT=.dll'#010+
  'PACKAGESUFFIX=win32'#010+
  'endif'#010+
  #010+
  '# OS/2'#010+
  'ifeq ($(OS_TARGET),os2)'#010+
  'PPUEXT=.ppo'#010+
  'ASMEXT=.so2'#010+
  'OEXT=.oo2'#010+
  'SMARTEXT=.so'#010+
  'STATICLIBEXT=.ao2'#010+
  'SHAREDLIBEXT=.dll'#010+
  'PACKAGESUFFIX=os2'#010+
  'endif'#010+
  #010+
  '#',' library prefix'#010+
  'LIBPREFIX=lib'#010+
  'ifeq ($(OS_TARGET),go32v2)'#010+
  'LIBPREFIX='#010+
  'endif'#010+
  'ifeq ($(OS_TARGET),go32v1)'#010+
  'LIBPREFIX='#010+
  'endif'#010+
  #010+
  '# determine which .pas extension is used'#010+
  'ifndef PASEXT'#010+
  'ifdef EXEOBJECTS'#010+
  'override TESTPAS:=$(strip $(wildcard $(addsuffix ','.pas,$(firstword $('+
  'EXEOBJECTS)))))'#010+
  'else'#010+
  'override TESTPAS:=$(strip $(wildcard $(addsuffix .pas,$(firstword $(UN'+
  'ITOBJECTS)))))'#010+
  'endif'#010+
  'ifeq ($(TESTPAS),)'#010+
  'PASEXT=.pp'#010+
  'else'#010+
  'PASEXT=.pas'#010+
  'endif'#010+
  'endif'#010+
  #010+
  #010+
  '[defaultrules]'#010+
  '#################################','###################################'+
  '#'#010+
  '# Default rules'#010+
  '#####################################################################'#010+
  #010+
  '.PHONY: defaultrule all debug examples test smart shared \'#010+
  '        showinstall install zipinstall zipinstalladd \'#010+
  '  ','      clean cleanall depend info'#010+
  #010+
  #010+
  '[loaderrules]'#010+
  '#####################################################################'#010+
  '# Loaders'#010+
  '#####################################################################'#010+
  #010+
  '.PHONY: fpc_loaders'#010+
  #010+
  '%$(OEXT): %$(LOADER','EXT)'#010+
  '        $(AS) -o $*$(OEXT) $<'#010+
  #010+
  'override ALLTARGET+=fpc_loaders'#010+
  'override CLEANTARGET+=fpc_loaders_clean'#010+
  'override SHOWINSTALLTARGET+=fpc_loaders_showinstall'#010+
  'override INSTALLTARGET+=fpc_loaders_install'#010+
  #010+
  'LOADEROFILES=$(addsuffix $(OEXT),$(','LOADEROBJECTS))'#010+
  #010+
  'fpc_loaders: $(LOADEROFILES)'#010+
  #010+
  'fpc_loaders_clean:'#010+
  '        -$(DEL) $(LOADEROFILES)'#010+
  #010+
  'fpc_loaders_showinstall:'#010+
  '        @$(ECHO) $(addprefix "\n"$(UNITINSTALLDIR)/,$(LOADEROFILES))'#010+
  #010+
  'fpc_loaders_install:'#010+
  '        $(MKDIR) $(UNITIN','STALLDIR)'#010+
  '        $(INSTALL) $(LOADEROFILES) $(UNITINSTALLDIR)'#010+
  #010+
  #010+
  '[unitrules]'#010+
  '#####################################################################'#010+
  '# Units'#010+
  '#####################################################################'#010+
  #010+
  '.PHONY: fpc_un','its'#010+
  #010+
  'override ALLTARGET+=fpc_units'#010+
  #010+
  'UNITPPUFILES=$(addsuffix $(PPUEXT),$(UNITOBJECTS))'#010+
  'override INSTALLPPUFILES+=$(UNITPPUFILES)'#010+
  'override CLEANPPUFILES+=$(UNITPPUFILES)'#010+
  #010+
  'fpc_units: $(UNITPPUFILES)'#010+
  #010+
  #010+
  #010+
  '[exerules]'#010+
  '#############################','#######################################'+
  '#'#010+
  '# Exes'#010+
  '#####################################################################'#010+
  #010+
  '.PHONY: fpc_exes'#010+
  #010+
  'EXEFILES=$(addsuffix $(EXEEXT),$(EXEOBJECTS))'#010+
  'EXEOFILES=$(addsuffix $(OEXT),$(EXEOBJECTS))'#010+
  #010+
  'override AL','LTARGET+=fpc_exes'#010+
  'override INSTALLEXEFILES+=$(EXEFILES)'#010+
  'override CLEANEXEFILES+=$(EXEFILES) $(EXEOFILES)'#010+
  #010+
  'fpc_exes: $(EXEFILES)'#010+
  #010+
  #010+
  '[examplerules]'#010+
  '#####################################################################'#010+
  '# Examples'#010+
  '##############','######################################################'+
  '#'#010+
  #010+
  '.PHONY: fpc_examples fpc_test'#010+
  #010+
  'EXAMPLEFILES=$(addsuffix $(EXEEXT),$(EXAMPLEOBJECTS))'#010+
  'EXAMPLEOFILES=$(addsuffix $(OEXT),$(EXAMPLEOBJECTS))'#010+
  #010+
  'override CLEANEXEFILES+=$(EXAMPLEFILES) $(EX','AMPLEOFILES)'#010+
  #010+
  'fpc_examples: all $(EXAMPLEFILES)'#010+
  #010+
  'fpc_test: examples'#010+
  #010+
  #010+
  '[compilerules]'#010+
  '#####################################################################'#010+
  '# General compile rules'#010+
  '#############################################################','#######'+
  '#'#010+
  #010+
  '.PHONY: fpc_all fpc_debug'#010+
  #010+
  'fpc_all: $(ALLTARGET)'#010+
  #010+
  'fpc_debug:'#010+
  '        $(MAKE) all DEBUG=1'#010+
  #010+
  '# General compile rules, available for both possible PASEXT'#010+
  #010+
  '.SUFFIXES: $(EXEEXT) $(PPUEXT) $(OEXT) .pas .pp'#010+
  #010+
  '%$(PPUEXT): %.pp'#010+
  '        $(COM','PILER) $< $(REDIR)'#010+
  '        $(EXECPASS)'#010+
  #010+
  '%$(PPUEXT): %.pas'#010+
  '        $(COMPILER) $< $(REDIR)'#010+
  '        $(EXECPASS)'#010+
  #010+
  '%$(EXEEXT): %.pp'#010+
  '        $(COMPILER) $< $(REDIR)'#010+
  '        $(EXECPASS)'#010+
  #010+
  '%$(EXEEXT): %.pas'#010+
  '        $(COMPILER) $< $(REDIR)'#010+
  '        $','(EXECPASS)'#010+
  #010+
  #010+
  '[libraryrules]'#010+
  '#####################################################################'#010+
  '# Library'#010+
  '#####################################################################'#010+
  #010+
  '.PHONY: fpc_smart fpc_shared'#010+
  #010+
  '# Default sharedlib units are a','ll unit objects'#010+
  'ifndef SHAREDLIBUNITOBJECTS'#010+
  'SHAREDLIBUNITOBJECTS=$(UNITOBJECTS)'#010+
  'endif'#010+
  #010+
  'fpc_smart:'#010+
  '        $(MAKE) all SMARTLINK=1'#010+
  #010+
  'fpc_shared: all'#010+
  'ifdef inlinux'#010+
  'ifndef LIBNAME'#010+
  '        @$(ECHO) LIBNAME not set'#010+
  'else'#010+
  '        $(PPUMOVE) $(SHARE','DLIBUNITOBJECTS) -o$(LIBNAME)'#010+
  'endif'#010+
  'else'#010+
  '        @$(ECHO) Shared Libraries not supported'#010+
  'endif'#010+
  #010+
  #010+
  '[installrules]'#010+
  '#####################################################################'#010+
  '# Install rules'#010+
  '##########################################','##########################'+
  '#'#010+
  #010+
  '.PHONY: fpc_showinstall fpc_install'#010+
  #010+
  'ifdef EXTRAINSTALLUNITS'#010+
  'override INSTALLPPUFILES+=$(addsuffix $(PPUEXT),$(EXTRAINSTALLUNITS))'#010+
  'endif'#010+
  #010+
  'ifdef INSTALLPPUFILES'#010+
  'ifdef PPUFILES'#010+
  'ifdef inlinux'#010+
  'INSTALLPPULINKFILES=$(','shell $(PPUFILES) -S -O $(INSTALLPPUFILES))'#010+
  'INSTALLPPULIBFILES=$(shell $(PPUFILES) -L $(INSTALLPPUFILES))'#010+
  'else'#010+
  'INSTALLPPULINKFILES=$(shell $(PPUFILES) $(INSTALLPPUFILES))'#010+
  'endif'#010+
  'endif'#010+
  'endif'#010+
  #010+
  'fpc_showinstall: $(SHOWINSTALLTARGET)'#010+
  'ifdef INSTAL','LEXEFILES'#010+
  '        @$(ECHO) $(addprefix "\n"$(BININSTALLDIR)/,$(INSTALLEXEFILES))'+
  #010+
  'endif'#010+
  'ifdef INSTALLPPUFILES'#010+
  '        @$(ECHO) $(addprefix "\n"$(UNITINSTALLDIR)/,$(INSTALLPPUFILES)'+
  ')'#010+
  'ifneq ($(INSTALLPPULINKFILES),)'#010+
  '        @$(ECHO) $(addprefi','x "\n"$(UNITINSTALLDIR)/,$(INSTALLPPULINK'+
  'FILES))'#010+
  'endif'#010+
  'ifneq ($(INSTALLPPULIBFILES),)'#010+
  '        @$(ECHO) $(addprefix "\n"$(LIBINSTALLDIR)/,$(INSTALLPPULIBFILE'+
  'S))'#010+
  'endif'#010+
  'endif'#010+
  'ifdef EXTRAINSTALLFILES'#010+
  '        @$(ECHO) $(addprefix "\n"$(EXTRAINST','ALLDIR)/,$(EXTRAINSTALLF'+
  'ILES))'#010+
  'endif'#010+
  #010+
  'fpc_install: $(INSTALLTARGET)'#010+
  '# Create UnitInstallFiles'#010+
  'ifdef INSTALLEXEFILES'#010+
  '        $(MKDIR) $(BININSTALLDIR)'#010+
  '# Compress the exes if upx is defined'#010+
  'ifdef UPXPROG'#010+
  '        -$(UPXPROG) $(INSTALLEXEFILES)',#010+
  'endif'#010+
  '        $(INSTALLEXE) $(INSTALLEXEFILES) $(BININSTALLDIR)'#010+
  'endif'#010+
  'ifdef INSTALLPPUFILES'#010+
  '        $(MKDIR) $(UNITINSTALLDIR)'#010+
  '        $(INSTALL) $(INSTALLPPUFILES) $(UNITINSTALLDIR)'#010+
  'ifneq ($(INSTALLPPULINKFILES),)'#010+
  '        $(INSTALL) $(INS','TALLPPULINKFILES) $(UNITINSTALLDIR)'#010+
  'endif'#010+
  'ifneq ($(INSTALLPPULIBFILES),)'#010+
  '        $(MKDIR) $(LIBINSTALLDIR)'#010+
  '        $(INSTALL) $(INSTALLPPULIBFILES) $(LIBINSTALLDIR)'#010+
  'endif'#010+
  'endif'#010+
  'ifdef EXTRAINSTALLFILES'#010+
  '        $(MKDIR) $(EXTRAINSTALLDIR)'#010+
  '   ','     $(INSTALL) $(EXTRAINSTALLFILES) $(EXTRAINSTALLDIR)'#010+
  'endif'#010+
  #010+
  #010+
  '[zipinstallrules]'#010+
  '#####################################################################'#010+
  '# Zip'#010+
  '#####################################################################'#010+
  #010+
  '.PHONY: fpc','_zipinstall fpc_zipinstalladd'#010+
  #010+
  '# Temporary path to pack a file'#010+
  'ifndef PACKDIR'#010+
  'ifndef inlinux'#010+
  'PACKDIR=pack_tmp'#010+
  'else'#010+
  'PACKDIR=/tmp/fpc-pack'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# Test dir if none specified'#010+
  'ifndef PACKAGEDIR'#010+
  'PACKAGEDIR=$(BASEDIR)'#010+
  'endif'#010+
  #010+
  '# Add .zip/.ta','r.gz extension'#010+
  'ifdef ZIPNAME'#010+
  'ifndef inlinux'#010+
  'override ZIPNAME:=$(ZIPNAME)$(ZIPEXT)'#010+
  'endif'#010+
  'endif'#010+
  #010+
  '# Default target which is call before zipping'#010+
  'ifndef ZIPTARGET'#010+
  'ZIPTARGET=install'#010+
  'endif'#010+
  #010+
  '# Note: This will not remove the zipfile first'#010+
  'fpc_zipins','talladd:'#010+
  'ifndef ZIPNAME'#010+
  '        @$(ECHO) Please specify ZIPNAME!'#010+
  '        @exit'#010+
  'else'#010+
  '        $(MAKE) $(ZIPTARGET) PREFIXINSTALLDIR=$(PACKDIR)'#010+
  'ifdef inlinux'#010+
  '        gzip -d $(PACKAGEDIR)/$(ZIPNAME).tar.gz'#010+
  '        cd $(PACKDIR) ; tar rv --file',' $(PACKAGEDIR)/$(ZIPNAME).tar *'+
  ' ; cd $(BASEDIR)'#010+
  '        gzip $(PACKAGEDIR)/$(ZIPNAME).tar'#010+
  'else'#010+
  '        cd $(PACKDIR) ; $(ZIPPROG) $(PACKAGEDIR)/$(ZIPNAME) * ; cd $(B'+
  'ASEDIR)'#010+
  'endif'#010+
  '        $(DELTREE) $(PACKDIR)'#010+
  'endif'#010+
  #010+
  '# First remove the zip a','nd then install'#010+
  'fpc_zipinstall:'#010+
  'ifndef ZIPNAME'#010+
  '        @$(ECHO) Please specify ZIPNAME!'#010+
  '        @exit'#010+
  'else'#010+
  '        $(DEL) $(PACKAGEDIR)/$(ZIPNAME)'#010+
  '        $(MAKE) $(ZIPTARGET) PREFIXINSTALLDIR=$(PACKDIR)'#010+
  'ifdef inlinux'#010+
  '        cd $(PACKDIR) ','; tar cvz --file $(PACKAGEDIR)/$(ZIPNAME).tar.'+
  'gz * ; cd $(BASEDIR)'#010+
  'else'#010+
  '        cd $(PACKDIR) ; $(ZIPPROG) $(PACKAGEDIR)/$(ZIPNAME) * ; cd $(B'+
  'ASEDIR)'#010+
  'endif'#010+
  '        $(DELTREE) $(PACKDIR)'#010+
  'endif'#010+
  #010+
  #010+
  '[cleanrules]'#010+
  '#################################','###################################'+
  '#'#010+
  '# Clean rules'#010+
  '#####################################################################'#010+
  #010+
  '.PHONY: fpc_clean fpc_cleanall'#010+
  #010+
  'ifdef EXTRACLEANUNITS'#010+
  'override CLEANPPUFILES+=$(addsuffix $(PPUEXT),$(EXTRACLEANUNITS)',')'#010+
  'endif'#010+
  #010+
  'ifdef CLEANPPUFILES'#010+
  'ifdef PPUFILES'#010+
  'CLEANPPULINKFILES=$(shell $(PPUFILES) $(CLEANPPUFILES))'#010+
  'endif'#010+
  'endif'#010+
  #010+
  'fpc_clean: $(CLEANTARGET)'#010+
  'ifdef CLEANEXEFILES'#010+
  '        -$(DEL) $(CLEANEXEFILES)'#010+
  'endif'#010+
  'ifdef CLEANPPUFILES'#010+
  '        -$(DEL) $(CLEA','NPPUFILES)'#010+
  'endif'#010+
  'ifneq ($(CLEANPPULINKFILES),)'#010+
  '        -$(DEL) $(CLEANPPULINKFILES)'#010+
  'endif'#010+
  'ifdef EXTRACLEANFILES'#010+
  '        -$(DEL) $(EXTRACLEANFILES)'#010+
  'endif'#010+
  '        -$(DEL) $(PPAS) link.res log'#010+
  #010+
  'fpc_cleanall:'#010+
  'ifdef CLEANEXEFILES'#010+
  '        -$(DEL)',' $(CLEANEXEFILES)'#010+
  'endif'#010+
  '        -$(DEL) *$(OEXT) *$(PPUEXT) *$(ASMEXT) *$(STATICLIBEXT) *$(SHA'+
  'REDLIBEXT) *$(PPLEXT)'#010+
  '        -$(DELTREE) *$(SMARTEXT)'#010+
  '        -$(DEL) $(PPAS) link.res log'#010+
  #010+
  #010+
  '[dependrules]'#010+
  '######################################','##############################'+
  '#'#010+
  '# Depend rules'#010+
  '#####################################################################'#010+
  #010+
  '.PHONY: fpc_depend'#010+
  #010+
  'fpc_depend:'#010+
  '        $(PPDEP) $(UNITOBJECTS)'#010+
  #010+
  #010+
  '[inforules]'#010+
  '############################################','########################'+
  '#'#010+
  '# Info rules'#010+
  '#####################################################################'#010+
  #010+
  '.PHONY: fpc_info fpc_cfginfo fpc_objectinfo fpc_toolsinfo fpc_installi'+
  'nfo \'#010+
  '        fpc_dirinfo'#010+
  #010+
  'fpc_info: $(FPCINFO)'#010+
  #010+
  '[info_cfg]'#010,
  'fpc_infocfg:'#010+
  '        @$(ECHO)'#010+
  '        @$(ECHO)  == Configuration info =='#010+
  '        @$(ECHO)'#010+
  '        @$(ECHO)  FPC....... $(FPC)'#010+
  '        @$(ECHO)  Version... $(FPC_VERSION)'#010+
  '        @$(ECHO)  CPU....... $(CPU_TARGET)'#010+
  '        @$(ECHO)  Source...','. $(OS_SOURCE)'#010+
  '        @$(ECHO)  Target.... $(OS_TARGET)'#010+
  '        @$(ECHO)'#010+
  #010+
  '[info_dirs]'#010+
  'fpc_infodirs:'#010+
  'ifdef inlinux'#010+
  '        @$(ECHO)'#010+
  '        @$(ECHO)  == Directory info =='#010+
  '        @$(ECHO)'#010+
  'ifdef NEEDGCCLIB'#010+
  '        @$(ECHO)  GCC library is ne','eded.'#010+
  'endif'#010+
  'ifdef NEEDOTHERLIB'#010+
  '        @$(ECHO)  Other library is needed.'#010+
  'endif'#010+
  '        @$(ECHO)  Basedir......... $(BASEDIR)'#010+
  '        @$(ECHO)'#010+
  '        @$(ECHO)  GCC library..... $(GCCLIBDIR)'#010+
  '        @$(ECHO)  Other library... $(OTHERLIBDIR)',#010+
  '        @$(ECHO)'#010+
  'endif'#010+
  #010+
  '[info_tools]'#010+
  'fpc_infotools:'#010+
  '        @$(ECHO)'#010+
  '        @$(ECHO)  == Tools info =='#010+
  '        @$(ECHO)'#010+
  '        @$(ECHO)  Pwd....... $(PWD)'#010+
  '        @$(ECHO)  Echo...... $(ECHO)'#010+
  'ifdef PPDEP'#010+
  '        @$(ECHO)  PPDep..... $(PP','DEP)'#010+
  'endif'#010+
  'ifdef PPUMOVE'#010+
  '        @$(ECHO)  PPUMove... $(PPUMOVE)'#010+
  'endif'#010+
  'ifdef PPUFILES'#010+
  '        @$(ECHO)  PPUFiles.. $(PPUFILES)'#010+
  'endif'#010+
  'ifdef DATA2INC'#010+
  '        @$(ECHO)  Data2Inc.. $(DATA2INC)'#010+
  'endif'#010+
  'ifdef SED'#010+
  '        @$(ECHO)  Sed....... $(SED)',#010+
  'endif'#010+
  'ifdef DATE'#010+
  '        @$(ECHO)  Date...... $(DATE)'#010+
  'endif'#010+
  'ifdef DIFF'#010+
  '        @$(ECHO)  Diff...... $(DIFF)'#010+
  'endif'#010+
  'ifdef CMP'#010+
  '        @$(ECHO)  Cmp....... $(CMP)'#010+
  'endif'#010+
  'ifdef UPXPROG'#010+
  '        @$(ECHO)  Upx....... $(UPXPROG)'#010+
  'endif'#010+
  'ifdef ZIPPROG',#010+
  '        @$(ECHO)  Zip....... $(ZIPPROG)'#010+
  'endif'#010+
  '        @$(ECHO)'#010+
  #010+
  '[info_objects]'#010+
  'fpc_infoobjects:'#010+
  '        @$(ECHO)'#010+
  '        @$(ECHO)  == Object info =='#010+
  '        @$(ECHO)'#010+
  '        @$(ECHO)  LoaderObjects..... $(LOADEROBJECTS)'#010+
  '        @$(ECHO)  U','nitObjects....... $(UNITOBJECTS)'#010+
  '        @$(ECHO)  ExeObjects........ $(EXEOBJECTS)'#010+
  '        @$(ECHO)'#010+
  '        @$(ECHO)  ExtraCleanUnits... $(EXTRACLEANUNITS)'#010+
  '        @$(ECHO)  ExtraCleanFiles... $(EXTRACLEANFILES)'#010+
  '        @$(ECHO)'#010+
  '        @$','(ECHO)  ExtraInstallUnits. $(EXTRAINSTALLUNITS)'#010+
  '        @$(ECHO)  ExtraInstallFiles. $(EXTRAINSTALLFILES)'#010+
  '        @$(ECHO)'#010+
  #010+
  '[info_install]'#010+
  'fpc_infoinstall:'#010+
  '        @$(ECHO)'#010+
  '        @$(ECHO)  == Install info =='#010+
  '        @$(ECHO)'#010+
  'ifdef DATE'#010+
  '  ','      @$(ECHO)  DateStr.............. $(DATESTR)'#010+
  'endif'#010+
  '        @$(ECHO)  PackageSuffix........ $(PACKAGESUFFIX)'#010+
  '        @$(ECHO)'#010+
  '        @$(ECHO)  BaseInstallDir....... $(BASEINSTALLDIR)'#010+
  '        @$(ECHO)  BinInstallDir........ $(BININSTALLD','IR)'#010+
  '        @$(ECHO)  LibInstallDir........ $(LIBINSTALLDIR)'#010+
  '        @$(ECHO)  UnitInstallDir....... $(UNITINSTALLDIR)'#010+
  '        @$(ECHO)  SourceInstallDir..... $(SOURCEINSTALLDIR)'#010+
  '        @$(ECHO)  DocInstallDir........ $(DOCINSTALLDIR)'#010+
  '    ','    @$(ECHO)  ExtraInstallDir...... $(EXTRAINSTALLDIR)'#010+
  '        @$(ECHO)'#010+
  #010+
  '[userrules]'#010+
  '#####################################################################'#010+
  '# Users rules'#010+
  '#####################################################################'#010+
  #010,
  '[end]'#010+
  ';'#010+
  '; $Log$
  '; Revision 1.2  1999-11-24 23:53:00  peter
  ';   * packages
  ';   * lot of other changes
  ';'#010+
  '; Revision 1.7  1999/11/23 09:43:35  peter'#010+
  ';   + internal .ini file'#010+
  ';   + packages support'#010+
  ';   * ppufiles,data2inc support'#010+
  ';'#010+
  ';'#010
);
