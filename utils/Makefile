#
# Makefile generated by fpcmake v0.99.13 on 1999-12-21 16:56
#

defaultrule: all

#####################################################################
# Autodetect OS (Linux or D





# Targets

override DIROBJECTS+=$(wildcard tply h2pas)
override EXEOBJECTS+=ppufiles ppudump ppumove ppdep ptop rstconv data2inc fpcmake delp

# Clean

override EXTRACLEANUNITS+=ppu ptopu

# Install

ZIPTARGET=install

# Defaults


# Directories

ifndef FPCDIR
FPCDIR=..
endif
ifndef PACKAGEDIR
PACKAGEDIR=$(FPCDIR)/packages
endif
ifndef COMPONENTDIR
COMPONENTDIR=$(FPCDIR)/components
endif
ifndef TARGETDIR
TARGETDIR=.
endif

# Packages

override NEEDUNITDIR+=$(FPCDIR)/fcl/$(OS_TARGET)

# Libraries


# Info

INFOTARGET=fpc_infocfg fpc_infoobjects fpc_infoinstall 





















all: fpc_all $(addsuffix _all,$(DIROBJECTS))

debug: fpc_debug $(addsuffix _debug,$(DIROBJECTS))

examples: $(addsuffix _examples,$(DIROBJECTS))

test: $(addsuffix _test,$(DIROBJECTS))

smart: fpc_smart $(addsuffix _smart,$(DIROBJECTS))

shared: fpc_shared $(addsuffix _shared,$(DIROBJECTS))

showinstall: fpc_showinstall $(addsuffix _showinstall,$(DIROBJECTS))

install: fpc_install $(addsuffix _install,$(DIROBJECTS))

sourceinstall: fpc_sourceinstall $(addsuffix _sourceinstall,$(DIROBJECTS))

zipinstall: fpc_zipinstall

zipinstalladd: fpc_zipinstalladd

clean: fpc_clean $(addsuffix _clean,$(DIROBJECTS))

cleanall: fpc_cleanall $(addsuffix _cleanall,$(DIROBJECTS))

depend: $(addsuffix _depend,$(DIROBJECTS))

info: fpc_info

.PHONY:  all debug examples test smart shared showinstall install sourceinstall zipinstall zipinstalladd clean cleanall depend info


ifneq ($(wildcard $(RTLDIR)),)
ifeq ($(wildcard $(RTLDIR)/$(FPCMADE)),)
override COMPILEPACKAGES+=rtl
rtl_package:
	$(MAKE) -C $(RTLDIR) all
endif
endif
ifneq ($(wildcard $(FCLDIR)),)
ifeq ($(wildcard $(FCLDIR)/$(FPCMADE)),)
override COMPILEPACKAGES+=fcl
fcl_package:
	$(MAKE) -C $(FCLDIR) all
endif
endif

.PHONY:  rtl_package fcl_package













# Target Dirs

OBJECTDIRTPLY=1
OBJECTDIRH2PAS=1

# Dir tply

ifdef OBJECTDIRTPLY
.PHONY:  tply_all tply_debug tply_examples tply_test tply_smart tply_shared tply_showinstall tply_install tply_sourceinstall tply_zipinstall tply_zipinstalladd tply_clean tply_cleanall tply_depend tply_info

tply_all:
	$(MAKE) -C tply all

tply_debug:
	$(MAKE) -C tply debug

tply_examples:
	$(MAKE) -C tply examples

tply_test:
	$(MAKE) -C tply test

tply_smart:
	$(MAKE) -C tply smart

tply_shared:
	$(MAKE) -C tply shared

tply_showinstall:
	$(MAKE) -C tply showinstall

tply_install:
	$(MAKE) -C tply install

tply_sourceinstall:
	$(MAKE) -C tply sourceinstall

tply_zipinstall:
	$(MAKE) -C tply zipinstall

tply_zipinstalladd:
	$(MAKE) -C tply zipinstalladd

tply_clean:
	$(MAKE) -C tply clean

tply_cleanall:
	$(MAKE) -C tply cleanall

tply_depend:
	$(MAKE) -C tply depend

tply_info:
	$(MAKE) -C tply info
endif

# Dir h2pas

ifdef OBJECTDIRH2PAS
.PHONY:  h2pas_all h2pas_debug h2pas_examples h2pas_test h2pas_smart h2pas_shared h2pas_showinstall h2pas_install h2pas_sourceinstall h2pas_zipinstall h2pas_zipinstalladd h2pas_clean h2pas_cleanall h2pas_depend h2pas_info

h2pas_all:
	$(MAKE) -C h2pas all

h2pas_debug:
	$(MAKE) -C h2pas debug

h2pas_examples:
	$(MAKE) -C h2pas examples

h2pas_test:
	$(MAKE) -C h2pas test

h2pas_smart:
	$(MAKE) -C h2pas smart

h2pas_shared:
	$(MAKE) -C h2pas shared

h2pas_showinstall:
	$(MAKE) -C h2pas showinstall

h2pas_install:
	$(MAKE) -C h2pas install

h2pas_sourceinstall:
	$(MAKE) -C h2pas sourceinstall

h2pas_zipinstall:
	$(MAKE) -C h2pas zipinstall

h2pas_zipinstalladd:
	$(MAKE) -C h2pas zipinstalladd

h2pas_clean:
	$(MAKE) -C h2pas clean

h2pas_cleanall:
	$(MAKE) -C h2pas cleanall

h2pas_depend:
	$(MAKE) -C h2pas depend

h2pas_info:
	$(MAKE) -C h2pas info
endif


#
# PPU Tools
#
ppu$(PPUEXT): ppu.pas

ppudump$(EXEEXT): ppudump.pp ppu$(PPUEXT)

ppumove$(EXEEXT): ppumove.pp ppu$(PPUEXT)

#
# Pascal beautifier
#
ptop$(EXEEXT): ptop.pp ptopu$(PPUEXT)

ptopu$(PPUEXT): ptopu.pp

#
# Other
#

fpcmake.inc: fpcmake.ini
	$(DATA2INC) -b -s fpcmake.ini fpcmake.inc fpcmakeini

fpcmake$(EXEEXT): fpcmake.pp fpcmake.inc

ppdep$(EXEEXT): ppdep.pp

#
# Don't export some tools, which are found in the current dir if it's in
# the path, so are not valid for the subdirs
#

unexport PPUFILES PPUMOVE DATA2INC
