# Make file for MPW make.# To run it, use:#   Make <target> -f MPWMake > Makeout ; Makeout# where <target> should be replaced with actual make target.############################################## TIPS (TODO move to Wiki or something## Defined variables: No quoting# Command lines: quote paths, dont quote option strings, since #   they might contain several options, which must be separated.# Recursive call to Make: #   - give options as -d XXX="{XXX}"#   - in same dir, remember to ensure to have different Makeout files,#     e g Makeout2.# # NOTE Currently only the compiler is built. msg is not converted, and utils# are not built. Also cycle is stopped after three rounds, no diff is checked.# TODO Change to build in :powerpc:units:powerpc-macosFPC = {FPCDIR}bin:ppcppccompiler Ä	"{FPC}" {OPT} "{RTLDIR}" -Fu:systems: -Fu:powerpc: ¶  -dpowerpc -dGDB -dBROWSERLOG -dNOOPT -WT -FE: pp.pas	Rename -y pp ppcppc# Tag Šven med msg konverteringen.clean Ä	Set Exit 0	Delete -y ppcppc	Delete -y Å.ppu	Delete -y Å.o 	# Does really .s files need to be deleted ?	Delete -y Å.s	Delete -y Å.xcoff	Set Exit 1install Ä  If {FPCDIR} == ''    Set -e FPCDIR `GetFileName -wd -m 'Select where to install the FreePascal folder'`FreePascal:    Set -e Commands "{Commands},{FPCDIR}bin:"    Echo "Set -e FPCDIR ¶'{FPCDIR}¶'" > "{MPW}Startup Items:FPC Startup"    Echo 'Set -e Commands "{Commands},{FPCDIR}bin:"' >> "{MPW}Startup Items:FPC Startup"  End  Set Exit 0  NewFolder "{FPCDIR}" ³ Dev:Null  NewFolder "{FPCDIR}bin:" ³ Dev:Null  Set Exit 1  Duplicate -y ppcppc "{FPCDIR}bin:ppcppc"  Echo "# Configuration file for Free Pascal for MPW" > "{FPCDIR}bin:fpc.cfg"  Echo "-Fu¶'{FPCDIR}units:rtl:¶'" >> "{FPCDIR}bin:fpc.cfg"  Echo "-l" >> "{FPCDIR}bin:fpc.cfg"  Echo "-vi" >> "{FPCDIR}bin:fpc.cfg"cycle Ä	Directory ::rtl:macos	Make clean -f MPWMake > Makeout ; Makeout	Make all -d FPC="{FPC}" -d OPT="{OPT}" -f MPWMake > Makeout ; Makeout	Directory :::compiler	Make clean -f MPWMake > Makeout2 ; Makeout2	Make compiler -d FPC="{FPC}" -d OPT="{OPT}" -d RTLDIR=-Fu::rtl:units:powerpc-macos -f MPWMake > Makeout2 ; Makeout2	#  Echo '******************** SECOND ROUND *********************'	Rename -y ppcppc oldfpc	Directory ::rtl:macos	Make clean -f MPWMake > Makeout ; Makeout	Make all -d FPC=:::compiler:oldfpc -d OPT="{OPT}" -f MPWMake > Makeout ; Makeout	Directory :::compiler	Make clean -f MPWMake > Makeout2 ; Makeout2	Make compiler -d FPC=oldfpc -d OPT="{OPT}" -d RTLDIR=-Fu::rtl:units:powerpc-macos -f MPWMake > Makeout2 ; Makeout2  #  Echo '********************* THIRD ROUND *********************'	Rename -y ppcppc oldfpc	Directory ::rtl:macos	Make clean -f MPWMake > Makeout ; Makeout	Make all -d FPC=:::compiler:oldfpc -d OPT="{OPT}" -f MPWMake > Makeout ; Makeout	Directory :::compiler	Make clean -f MPWMake > Makeout2 ; Makeout2	Make compiler -d FPC=oldfpc -d OPT="{OPT}" -d RTLDIR=-Fu::rtl:units:powerpc-macos -f MPWMake > Makeout2 ; Makeout2